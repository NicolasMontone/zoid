{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/flush.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/belter/src/constants.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/undefined.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/bridge/common.js","webpack://zoid/./node_modules/post-robot/src/bridge/parent.js","webpack://zoid/./node_modules/post-robot/src/bridge/setup.js","webpack://zoid/./node_modules/post-robot/src/bridge/bridge.js","webpack://zoid/./node_modules/post-robot/src/bridge/child.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/on.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/public/send.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/setup.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/serialize.js","webpack://zoid/./src/constants.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/window.js","webpack://zoid/./src/child/child.js","webpack://zoid/./src/component/props.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./src/parent/parent.js","webpack://zoid/./src/component/templates/container.js","webpack://zoid/./src/component/templates/component.js","webpack://zoid/./src/component/component.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","prototype","constructor","_extends","assign","target","arguments","length","source","apply","isPromise","item","Promise","window","Window","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","Error","dispatch","setTimeout","indexOf","push","j","dispatchPossiblyUnhandledError","asyncReject","chain","firstPromise","secondPromise","onSuccess","onError","promiseResult","catch","undefined","finally","onFinally","try","timeout","time","clearTimeout","toPromise","TypeError","all","promises","count","results","slice","prom","hash","awaitPromises","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","isRegex","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","getOpener","opener","canReadFromWindow","getActualDomain","PROTOCOL","host","getDomain","domain","mockDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getFrames","frames","len","frame","getAllChildFrames","getTop","top","getAllFramesInWindow","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","getUserAgent","navigator","mockUserAgent","userAgent","getFrameByName","winFrames","childFrame","isOpener","getAncestor","anyMatch","collection1","collection2","item1","getDistanceFromTop","distance","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","getDomainFromUrl","url","split","join","onCloseWindow","callback","maxtime","Infinity","check","isWindow","obj","__cross_domain_utils_window_check__","normalizeMockUrl","getFrameForWindow","frameElement","document","querySelectorAll","closeWindow","isIframe","parentElement","removeChild","close","objectIDs","CrossDomainSafeWeakMap","weakmap","keys","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","e","_construct","Parent","Class","isNativeReflectConstruct","a","instance","Function","_wrapNativeSuper","_cache","Map","Wrapper","configurable","getFunctionName","fn","__name__","displayName","setFunctionName","base64encode","str","btoa","encodeURIComponent","replace","p1","String","fromCharCode","parseInt","Buffer","from","uniqueID","chars","charAt","floor","toISOString","toLowerCase","serializeArgs","subkey","val","uid","getObjectID","getEmptyObject","memoizeGlobalIndex","memoizeGlobalIndexValidFrom","memoize","options","simpleCache","thisCache","thisNamespace","cacheTime","memoizeIndex","memoizedFunction","cache","cacheKey","cacheResult","now","reset","memoizePromise","memoizedPromiseFunction","inlineMemoize","logic","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","extend","identity","safeInterval","loop","arrayFrom","isDefined","cleanup","cleanErr","tasks","cleaned","cleaner","register","task","shift","assertExists","thing","clear","ExtendableError","captureStackTrace","ReferenceError","getBody","body","isDocumentReady","readyState","isDocumentInteractive","urlEncode","parseQuery","queryString","params","pair","decodeURIComponent","extendQuery","originalQuery","props","filter","appendChild","container","isElement","element","Element","nodeType","style","getElementSafe","id","querySelector","elementReady","el","interval","setInterval","clearInterval","awaitFrameLoadPromises","PopupOpenError","awaitFrameLoad","addEventListener","cleanIframes","linkFrameWindow","awaitFrameWindow","loadedFrame","iframe","tag","styleText","createElement","class","className","setAttribute","attributes","styleSheet","cssText","createTextNode","html","innerHTML","allowTransparency","backgroundColor","border","isIE","hasAttribute","getElement","event","removeEventListener","showElement","setProperty","hideElement","destroyElement","isElementClosed","onResize","width","height","currentWidth","offsetWidth","currentHeight","offsetHeight","canceled","observer","getClientRects","isElementVisible","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","disconnect","isShadowElement","currentScript","getCurrentScript","getStackTrace","stackDetails","exec","scriptLocation","getElementsByTagName","reverse","script","src","inferCurrentScript","currentUID","isPerc","test","toNum","toPx","toCSS","normalizeDimension","dim","max","getGlobal","globalKey","__POST_ROBOT__","getAttribute","ATTRIBUTES","hashedString","total","charCodeAt","abs","strHashStr","dataset","getObj","globalStore","defStore","store","storeKey","defVal","del","WildCard","getWildcard","global","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","resolveHelloPromise","helloPromises","existingPromise","newPromise","sayHello","send","instanceID","data","getWindowInstanceID","awaitWindowHello","getHelloPromise","markWindowKnown","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","code","toJSON","defaultSerializers","DESERIALIZER","RegExp","defaultDeserializers","needsBridgeForBrowser","needsBridgeForWin","needsBridgeForDomain","needsBridge","getBridgeName","BRIDGE_NAME_PREFIX","isBridge","documentBodyReady","registerRemoteWindow","findRemoteWindow","remoteWinPromise","registerRemoteSendMessage","sendMessage","remoteWin","remoteDomain","fireAndForget","rejectRemoteSendMessage","linkWindow","popupWindowsByName","popupWindowsByWin","winName","details","setupBridge","windowOpen","on","receiveMessage","open","last","bridgePromise","bridge","getWindowDetails","listenForOpenTunnel","openTunnelToParent","canary","tunnelWindows","parentWindow","cleanTunnelWindows","addTunnelWindow","tunnelWindow","setupOpenTunnelToParent","openTunnelToOpener","cleanupProxyWindows","idToProxyWindow","shouldClean","getSerializedWindow","winPromise","windowNamePromise","windowTypePromise","getName","getType","focus","isClosed","setLocation","href","opts","form","display","input","submit","submitForm","setName","sameDomain","ProxyWindow","serializedWindow","isProxyWindow","actualWindow","actualWindowPromise","getID","setWindow","isPopup","isPopupPromise","getNamePromise","reopenPromise","focusPromise","getWindow","awaitWindow","matchWindow","proxyInstanceID","knownWindowInstanceID","unwrap","serialize","toProxyWindow","deserialize","addMethod","methodStore","proxyWindowMethods","lookupMethod","serializeFunction","destination","meth","methodSource","arg","__id__","serializeMessage","serializers","serializer","serializePromise","deserializeMessage","deserializers","parse","deserializer","serializedPromise","deserializePromise","serializedFunction","getDeserializedFunction","crossDomainFunctionWrapper","__origin__","__source__","deserializeFunction","SEND_MESSAGE_STRATEGIES","domainBuffer","buffer","serializedMessage","strategies","errors","strategyName","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","requestListeners","winQualifier","nameListeners","domainListeners","listener","regex","handleRequest","logName","sendResponse","ack","pathname","handleError","handleAck","handleResponse","receivedMessages","messages","parsedMessage","parseMessages","deserializeMessages","requestListener","addRequestListener","listenersCollection","existingListener","regexListeners","regexListener","strDomain","errorHandler","postMessage","messagingChild","messagingParent","sendBridgeMessage","foreignGlobal","domainMatcher","responseTimeout","childTimeout","validateOptions","actualParent","isAncestor","targetDomain","actualDomain","normalizedDomain","normalizeDomain","responseListener","addResponseListener","reqPromises","markResponseListenerErrored","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cancelled","internalSerializeMessage","internalDeserializeMessage","cleanUpWindow","tryGlobal","getProxyObject","openBridge","bridges","bridgeFrames","openBridgeFrame","linkUrl","hasBridge","destroyBridges","PROP_TYPE","STRING","OBJECT","FUNCTION","BOOLEAN","NUMBER","ARRAY","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","EVENT","RENDER","RENDERED","DISPLAY","ERROR","CLOSE","DESTROY","PROPS","RESIZE","FOCUS","normalizeChildProp","propsDef","helpers","prop","childDecorate","onProps","resize","getParentDomain","show","hide","export","getSiblings","parseChildWindowName","windowName","zoidcomp","encodedPayload","atob","base64decode","getChildPayload","destroy","defaultNoop","decorateOnce","eachProp","propDef","serializeProps","getParam","queryParam","bodyParam","getValue","queryValue","bodyValue","finalParam","finalValue","serialization","dotify","prefix","newobj","every","dotkey","mapProps","parentComponent","triggered","emitter","currentProxyWin","currentProxyContainer","childComponent","overrides","parentWin","containerTemplate","prerenderTemplate","dimensions","autoResize","domainMatch","xports","initPromise","handledErrors","clean","state","internalState","visible","eventName","handlerList","trigger","triggerOnce","onErrorOverride","getProxyContainerOverride","getProxyContainer","showOverride","hideOverride","closeOverride","renderContainerOverride","renderContainer","getProxyWindowOverride","getProxyWindow","setProxyWinOverride","setProxyWin","openFrameOverride","openFrame","openPrerenderFrameOverride","openPrerenderFrame","prerenderOverride","prerender","openOverride","openPrerenderOverride","openPrerender","watchForUnloadOverride","watchForUnload","getInternalStateOverride","getInternalState","setInternalStateOverride","setInternalState","getDimensions","resolveInitPromise","rejectInitPromise","getPropsForChild","sendToChild","newInternalState","windowProp","proxyWin","containerElement","insertShadowSlot","shadowHost","shadowRoot","getShadowRoot","getShadowHost","slotName","slot","slotProvider","setState","getUrl","getAttributes","getChildDomain","getDomainMatcher","title","proxyPrerenderFrame","prerenderFrame","prerenderFrameWindow","getWindowRef","windows","initChild","childExports","proxyFrame","outerWidth","left","round","screenX","screen","outerHeight","screenY","status","toolbar","menubar","resizable","scrollbars","popup","unloadWindowListener","closeParentWindowListener","checkWindowClose","secondIsClosed","exportsPromise","xport","actualExports","renderTemplate","renderer","proxyPrerenderWin","prerenderWindow","isBlankDomain","tagName","children","writeElementToWindow","prerenderResizeListener","proxyContainer","rerender","innerContainer","containerWatcher","sacrificialFrame","sacrificialFrameWin","mutationObservers","elementClosed","mutationElement","mutationObserver","frameWin","watchElementForClose","removeError","getHelpers","updateProps","setProps","newProps","isUpdate","inputProps","propNames","aliases","alias","default","decorate","decoratedValue","required","extendProps","childProps","init","onRender","onDisplay","onRendered","onClose","onDestroy","onFocus","render","childDomain","checkAllowRender","delegatePromise","delegateProps","propName","allowDelegate","childOverridesPromise","POST_MESSAGE","parentComp","getDelegateOverrides","childOverrides","delegate","watchForUnloadPromise","buildUrlPromise","query","originalUrl","originalHash","hashString","extendUrl","buildBodyPromise","onRenderPromise","getProxyContainerPromise","getProxyWindowPromise","buildWindowNamePromise","propRef","getPropsRef","propsRef","version","__ZOID__","parentDomain","checkClose","buildChildPayload","childPayload","openFramePromise","openPrerenderFramePromise","renderContainerPromise","openPromise","openPrerenderPromise","setStatePromise","prerenderPromise","setWindowNamePromise","getMethodPromise","loadUrlPromise","windowUrl","watchForClosePromise","watchForClose","onDisplayPromise","openBridgePromise","bridgeUrl","bridgeDomain","runTimeoutPromise","onRenderedPromise","getProps","getExports","defaultContainerTemplate","div","cspNonce","classList","add","remove","defaultPrerenderTemplate","spinner","cleanInstances","cleanZoid","component","allowDelegateListener","delegateListener","allowedParentDomains","defaultContext","validate","eligible","logger","info","xportsDefinition","valuePromise","normalizeOptions","instances","isChild","payload","registerChild","xprops","components","onPropHandlers","parentExports","parentComponentWindow","ref","getNthParent","ancestor","getParentComponentWindow","anyParent","currentParent","winParent","normalizedProps","normalizeChildProps","checkParentDomain","getPropsByRef","ZOID","eligibility","reason","clone","getDefaultContext","finalContext","getDefaultContainer","newInstance","renderTo","childComponents","childName","Child","childInputProps","parentProps","getChildren","isEligible","driver","driverName","dep","canRenderTo","initialized","sourceElement","originalEvent","messageListener","listenForMessages","initHello","comp","destroyComponents","destroyPromise","destroyAll","responseListeners","cancelResponseListeners"],"mappings":"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","file":"zoid.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        const toString = ({}).toString;\n\n        if (toString) {\n            const name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : {| cancel : () => void |} {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    const promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    // eslint-disable-next-line flowtype/no-mutable-array\n    handlers : Array<{|\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    |}>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            const err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        const { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            const { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                const promiseResult : ZalgoPromise<*> = result;\n\n                if (promiseResult.resolved) {\n                    promise.resolve(promiseResult.value);\n                } else {\n                    promise.reject(promiseResult.error);\n                }\n\n                promiseResult.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X, Y>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        const promise = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X, Y>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        // $FlowFixMe incompatible-call\n        const resultPromise : ZalgoPromise<X | Y> = this.then(undefined, onError);\n        return resultPromise;\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        const timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X, Y>(value : ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n\n        if (value instanceof ZalgoPromise) {\n            // $FlowFixMe incompatible-type-arg\n            const result : ZalgoPromise<X | Y> = value;\n            return result;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : $ReadOnlyArray<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        const promise = new ZalgoPromise();\n        let count = promises.length;\n        // eslint-disable-next-line no-undef\n        const results = ([] : $TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>).slice();\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            const prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        const result = {};\n        const awaitPromises = [];\n\n        for (const key in promises) {\n            if (promises.hasOwnProperty(key)) {\n                const value = promises[key];\n\n                if (isPromise(value)) {\n                    awaitPromises.push(value.then(res => {\n                        result[key] = res;\n                    }));\n                } else {\n                    result[key] = value;\n                }\n            }\n        }\n        \n        return ZalgoPromise.all(awaitPromises).then(() => result);\n    }\n\n    static map<T, X>(items : $ReadOnlyArray<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<$ReadOnlyArray<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : {| cancel : () => void |} {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X, Y, C : mixed, A : $ReadOnlyArray<mixed>>(method : (...args : $ReadOnlyArray<mixed>) => (ZalgoPromise<X> | Y), context? : C, args? : A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result : ZalgoPromise<X> | Y;\n\n        startActive();\n        \n        try {\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        // $FlowFixMe incompatible-call\n        const resultPromise = ZalgoPromise.resolve(result);\n\n        return resultPromise;\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    // $FlowFixMe method-unbinding\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nconst IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    const location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    const protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        const parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    const host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    const domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        const desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    const childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    for (const frame of getFrames(win)) {\n        result.push(frame);\n\n        for (const childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (const frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n    const top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    let result = [ ...getAllChildFrames(top), top ];\n\n    // Win may be in shadow dom\n    if (result.indexOf(win) === -1) {\n        result = [ ...result, win, ...getAllChildFrames(win) ];\n    }\n\n    return result;\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    const frames = getAllFramesInWindow(win);\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    const doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        let parent = frame;\n\n        while (parent.parentNode && parent.parentNode !== parent) {\n            parent = parent.parentNode;\n        }\n\n        // $FlowFixMe\n        if (!parent.host || !doc.documentElement.contains(parent.host)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : $ReadOnlyArray<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nconst iframeWindows = [];\nconst iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    const iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        const frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    const winFrames = getFrames(win);\n\n    for (const childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        const namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    const top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    const frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    const opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    const parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    const actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (const frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (const item1 of collection1) {\n        for (const item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    const top1 = getTop(win1) || win1;\n    const top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    const allFrames1 = getAllFramesInWindow(win1);\n    const allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    const opener1 = getOpener(top1);\n    const opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() })`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : {| cancel : () => void |} {\n\n    let timeout;\n\n    const check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        // $FlowFixMe method-unbinding\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if ('postMessage' in obj && 'self' in obj && 'location' in obj) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    if (isIframe(win)) {\n        const frame = getFrameForWindow(win);\n        if (frame && frame.parentElement) {\n            frame.parentElement.removeChild(frame);\n            return;\n        }\n    }\n\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : $ReadOnlyArray<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    // eslint-disable-next-line flowtype/no-mutable-array\n    keys : Array<K>\n    // eslint-disable-next-line flowtype/no-mutable-array\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        const weakmap = this.weakmap;\n        const keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            const value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const name = this.name;\n                const entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const values = this.values;\n        const index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        const value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","\n/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        })).replace(/[=]/g, '');\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64').replace(/[=]/g, '');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        // $FlowFixMe[method-unbinding]\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    const chars = '0123456789abcdef';\n\n    const randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    const timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `uid_${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : $ReadOnlyArray<T>) : string {\n    try {\n        // $FlowFixMe[method-unbinding]\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\nexport function getEmptyObject() : {||} {\n    // $FlowFixMe\n    return {};\n}\n\ntype MemoizeOptions = {|\n    name? : string,\n    time? : number,\n    thisNamespace? : boolean\n|};\n\nconst getDefaultMemoizeOptions = () : MemoizeOptions => {\n    // $FlowFixMe\n    return {};\n};\n\nexport type Memoized<F> = F & {| reset : () => void |};\n\nlet memoizeGlobalIndex = 0;\nlet memoizeGlobalIndexValidFrom = 0;\n\nexport function memoize<F : Function>(method : F, options? : MemoizeOptions = getDefaultMemoizeOptions()) : Memoized<F> {\n    const { thisNamespace = false, time: cacheTime } = options;\n\n    let simpleCache;\n    let thisCache;\n\n    let memoizeIndex = memoizeGlobalIndex;\n    memoizeGlobalIndex += 1;\n\n    const memoizedFunction = function memoizedFunction(...args) : mixed {\n        if (memoizeIndex < memoizeGlobalIndexValidFrom) {\n            simpleCache = null;\n            thisCache = null;\n            memoizeIndex = memoizeGlobalIndex;\n            memoizeGlobalIndex += 1;\n        }\n\n        let cache;\n\n        if (thisNamespace) {\n            thisCache = thisCache || new WeakMap();\n            cache = thisCache.getOrSet(this, getEmptyObject);\n        } else {\n            cache = simpleCache = simpleCache || {};\n        }\n\n        const cacheKey = serializeArgs(args);\n        let cacheResult = cache[cacheKey];\n\n        if (cacheResult && cacheTime && (Date.now() - cacheResult.time) < cacheTime) {\n            delete cache[cacheKey];\n            cacheResult = null;\n        }\n\n        if (cacheResult) {\n            return cacheResult.value;\n        }\n\n        const time  = Date.now();\n        const value = method.apply(this, arguments);\n\n        cache[cacheKey] = { time, value };\n\n        return value;\n    };\n\n    memoizedFunction.reset = () => {\n        simpleCache = null;\n        thisCache = null;\n    };\n\n    // $FlowFixMe\n    const result : F = memoizedFunction;\n\n    return setFunctionName(result, `${ options.name || getFunctionName(method) }::memoized`);\n}\n\nmemoize.clear = () => {\n    memoizeGlobalIndexValidFrom = memoizeGlobalIndex;\n};\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : $ReadOnlyArray<any>) : ZalgoPromise<R> {\n        const key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\ntype PromisifyOptions = {|\n    name ? : string\n|};\n\nconst getDefaultPromisifyOptions = () : PromisifyOptions => {\n    // $FlowFixMe\n    return {};\n};\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : $ReadOnlyArray<any>) => R, options : PromisifyOptions = getDefaultPromisifyOptions()) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : $ReadOnlyArray<any>) => R, logic : (...args : $ReadOnlyArray<any>) => R, args : $ReadOnlyArray<any> = []) : R {\n    // $FlowFixMe\n    const cache : {| [string] : R |} = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    const key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    const result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    const regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : T {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            // $FlowFixMe[method-unbinding]\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            const stack = err && err.stack;\n            const message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        // $FlowFixMe[method-unbinding]\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) {\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    // $FlowFixMe[method-unbinding]\n    const defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    // $FlowFixMe[method-unbinding]\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    const index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    const original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            // $FlowFixMe[method-unbinding]\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : $ReadOnlyArray<T> {\n    if (Object.values) {\n        // $FlowFixMe\n        return Object.values(obj);\n    }\n\n    const result : Array<T> = [];\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            // $FlowFixMe[escaped-generic]\n            result.push(obj[key]);\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n\n// eslint-disable-next-line no-undef\nexport const memoizedValues : <T>({ [string] : T }) => $ReadOnlyArray<T> = memoize(values);\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : $ReadOnlyArray<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : $ReadOnlyArray<number>) : number {\n    return Math.max(...args);\n}\n\nexport function roundUp(num : number, nearest : number) : number {\n    const remainder = num % nearest;\n    return remainder\n        ? (num - remainder) + nearest\n        : num;\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : $ReadOnlyArray<T> {\n    const results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    const result = {};\n\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : $ReadOnlyArray<string> {\n    const result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        const localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : {| cancel : () => void |} {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    const result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, -2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        const parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            const part = parts[i];\n            const isLast = (i + 1 === parts.length);\n            const isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {|\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n|};\n\nexport function eventEmitter() : EventEmitterType {\n    const triggered = {};\n    let handlers = {};\n\n    const emitter = {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            const handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            const listener = emitter.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            const handlerList = handlers[eventName];\n            const promises = [];\n\n            if (handlerList) {\n                for (const handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return emitter.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n\n    return emitter;\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    const pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    const interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | $ReadOnlyArray<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            const value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-undef\n    // $FlowFixMe[method-unbinding]\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    // $FlowFixMe[method-unbinding]\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    const constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    const prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : $ReadOnlyArray<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        const length = item.length;\n        const result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                const el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        const result = {};\n\n        for (const key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                const el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        const descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {|\n    text : string,\n    groups : $ReadOnlyArray<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n|};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    const result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    const index : number = result.index;\n    const regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : $ReadOnlyArray<RegexResultType> {\n\n    const matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : $ReadOnlyArray<mixed>) => T, time : number = 100) : (...args : $ReadOnlyArray<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    // $FlowFixMe[method-unbinding]\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : $ReadOnlyArray<any>) => R) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            }));\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => {| cancel : () => void |},\n    all : (err? : mixed) => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n    let cleanErr;\n\n    const cleaner = {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                cleaner.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) : {| cancel : () => void |} {\n            const task = once(() => method(cleanErr));\n\n            if (cleaned) {\n                method(cleanErr);\n            } else {\n                tasks.push(task);\n            }\n\n            return {\n                cancel: () => {\n                    const index = tasks.indexOf(task);\n                    if (index !== -1) {\n                        tasks.splice(index, 1);\n                    }\n                }\n            };\n        },\n\n        all(err? : mixed) : ZalgoPromise<void> {\n            cleanErr = err;\n\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.shift();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n\n    return cleaner;\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\n// eslint-disable-next-line flowtype/no-mutable-array\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n\nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n\nexport const constHas = <X : (string | boolean | number), T : { [string] : X }>(constant : T, value : X) : boolean => {\n    return memoizedValues(constant).indexOf(value) !== -1;\n};\n\nexport function dedupeErrors<T>(handler : (mixed) => T) : (mixed) => (T | void) {\n    const seenErrors = [];\n    const seenStringifiedErrors = {};\n\n    return (err) => {\n        if (seenErrors.indexOf(err) !== -1) {\n            return;\n        }\n\n        seenErrors.push(err);\n\n        const stringifiedError = stringifyError(err);\n        if (seenStringifiedErrors[stringifiedError]) {\n            return;\n        }\n\n        seenStringifiedErrors[stringifiedError] = true;\n        return handler(err);\n    };\n}\n\nexport class ExtendableError extends Error {\n    constructor(message : string) {\n        super(message);\n        // eslint-disable-next-line unicorn/custom-error-definition\n        this.name = this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n  \n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        const testWeakMap = new WeakMap();\n        const testKey = {};\n        const testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","/* @flow */\n/* eslint max-lines: off */\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed, assertSameDomain,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, memoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom, ExtendableError, strHashStr } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES, ATTRIBUTES, UID_HASH_LENGTH } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function getBody() : HTMLBodyElement {\n    // eslint-disable-next-line compat/compat\n    const body = document.body;\n\n    if (!body) {\n        throw new Error(`Body element not found`);\n    }\n\n    return body;\n}\n\nexport function isDocumentReady() : boolean {\n    // eslint-disable-next-line compat/compat\n    return Boolean(document.body) && (document.readyState === 'complete');\n}\n\nexport function isDocumentInteractive() : boolean {\n    // eslint-disable-next-line compat/compat\n    return Boolean(document.body) && (document.readyState === 'interactive');\n}\n\nexport function urlEncode(str : string) : string {\n    return encodeURIComponent(str);\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\ntype WaitForDocumentReady = () => ZalgoPromise<void>;\n\nexport const waitForDocumentReady : WaitForDocumentReady = memoize(() => {\n    return new ZalgoPromise(resolve => {\n\n        if (isDocumentReady() || isDocumentInteractive()) {\n            return resolve();\n        }\n\n        const interval = setInterval(() => {\n            if (isDocumentReady() || isDocumentInteractive()) {\n                clearInterval(interval);\n                return resolve();\n            }\n        }, 10);\n    });\n});\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return ZalgoPromise.try(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        return waitForDocumentReady().then(() => {\n            if (document.body) {\n                return document.body;\n            }\n\n            throw new Error('Document ready but document.body not present');\n        });\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        const params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport type Query = {\n    [ string ] : boolean | string\n};\n\nexport function formatQuery(obj : Query = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string' || typeof obj[key] === 'boolean';\n    }).map(key => {\n        const val = obj[key];\n\n        if (typeof val !== 'string' && typeof val !== 'boolean') {\n            throw new TypeError(`Invalid type for query`);\n        }\n\n        return `${ urlEncode(key) }=${ urlEncode(val.toString()) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : Query = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : {| query? : Query, hash? : Query |}) : string {\n\n    const query = options.query || {};\n    const hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    const queryString = extendQuery(originalQuery, query);\n    const hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    const meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function getPerformance() : ?Performance {\n    return inlineMemoize(getPerformance, () : ?Performance => {\n        const performance = window.performance;\n\n        if (\n            performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        ) {\n            return performance;\n        }\n    });\n}\n\nexport function enablePerformance() : boolean {\n    return Boolean(getPerformance());\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n        const performance = getPerformance();\n\n        if (!performance) {\n            return;\n        }\n\n        const timing = performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined') && window.location !== undefined;\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : $ReadOnlyArray<HTMLElement> {\n    // $FlowFixMe[method-unbinding]\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER || event.keyCode === KEY_CODES.SPACE) { // eslint-disable-line unicorn/prefer-event-key\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path, reverse = false } : {| host? : string, path : string, reverse? : boolean |}) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        const url = `${ host }${ path }`;\n        // $FlowFixMe[method-unbinding]\n        const scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        if (reverse) {\n            scripts.reverse();\n        }\n\n        for (const script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            const src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                const value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                const result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : $ReadOnlyArray<{| country? : string, lang : string |}> {\n    const nav = window.navigator;\n\n    const locales = nav.languages\n        ? [ ...nav.languages ]\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            const [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    const element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        const interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                resolve(el);\n                clearInterval(interval);\n                return;\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\n// eslint-disable-next-line unicorn/custom-error-definition\nexport class PopupOpenError extends ExtendableError {}\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    const { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        // $FlowFixMe\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    const name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    const params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        const err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    const tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    const documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {|\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n|};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        const promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    const promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nconst getDefaultCreateElementOptions = () : ElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = getDefaultCreateElementOptions(), container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    const element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (const key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\ntype StringMap = {|\n    [ string ] : string\n|};\n\nexport type IframeElementOptionsType = {|\n    style? : StringMap,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : StringMap,\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n|};\n\nconst getDefaultIframeOptions = () : IframeElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultStringMap = () : StringMap => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function iframe(options : IframeElementOptionsType = getDefaultIframeOptions(), container : ?HTMLElement) : HTMLIFrameElement {\n\n    const attributes = options.attributes || getDefaultStringMap();\n    const style = options.style || getDefaultStringMap();\n\n    // $FlowFixMe\n    const newAttributes = {\n        allowTransparency: 'true',\n        ...attributes\n    };\n\n    // $FlowFixMe\n    const newStyle = {\n        backgroundColor: 'transparent',\n        border:          'none',\n        ...style\n    };\n\n    const frame = createElement('iframe', {\n        attributes: newAttributes,\n        style:      newStyle,\n        html:       options.html,\n        class:      options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n\n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        const el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : $ReadOnlyArray<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (const eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (const eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    const capitalizedName = capitalizeFirstLetter(name);\n\n    for (const prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        // eslint-disable-next-line prefer-const\n        let startTimeout;\n        let endTimeout;\n        // eslint-disable-next-line prefer-const\n        let startEvent;\n        // eslint-disable-next-line prefer-const\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', 'hidden', 'important');\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', 'none', 'important');\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    const animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode || !el.ownerDocument || !el.ownerDocument.documentElement || !el.ownerDocument.documentElement.contains(el)) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let cancelled = false;\n    const mutationObservers = [];\n    // eslint-disable-next-line prefer-const\n    let interval;\n    // eslint-disable-next-line prefer-const\n    let sacrificialFrame;\n    let sacrificialFrameWin;\n\n    const cancel = () => {\n        cancelled = true;\n        for (const observer of mutationObservers) {\n            observer.disconnect();\n        }\n        if (interval) {\n            interval.cancel();\n        }\n        if (sacrificialFrameWin) {\n            // eslint-disable-next-line no-use-before-define\n            sacrificialFrameWin.removeEventListener('unload', elementClosed);\n        }\n        if (sacrificialFrame) {\n            destroyElement(sacrificialFrame);\n        }\n    };\n\n    const elementClosed = () => {\n        if (!cancelled) {\n            handler();\n            cancel();\n        }\n    };\n\n    if (isElementClosed(element)) {\n        elementClosed();\n        return { cancel };\n    }\n\n    // Strategy 1: Mutation observer\n\n    if (window.MutationObserver) {\n        let mutationElement = element.parentElement;\n        while (mutationElement) {\n            const mutationObserver = new window.MutationObserver(() => {\n                if (isElementClosed(element)) {\n                    elementClosed();\n                }\n            });\n\n            mutationObserver.observe(mutationElement, { childList: true });\n            mutationObservers.push(mutationObserver);\n            mutationElement = mutationElement.parentElement;\n        }\n    }\n\n    // Strategy 2: Sacrificial iframe\n\n    sacrificialFrame = document.createElement('iframe');\n    sacrificialFrame.setAttribute('name', `__detect_close_${ uniqueID() }__`);\n    sacrificialFrame.style.display = 'none';\n    awaitFrameWindow(sacrificialFrame).then(frameWin => {\n        sacrificialFrameWin = assertSameDomain(frameWin);\n        sacrificialFrameWin.addEventListener('unload', elementClosed);\n    });\n    element.appendChild(sacrificialFrame);\n\n    // Strategy 3: Poller\n\n    const check = () => {\n        if (isElementClosed(element)) {\n            elementClosed();\n        }\n    };\n    interval = safeInterval(check, 1000);\n\n    return { cancel };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of querySelectorAll('script', el)) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({| width : number, height : number |}) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {| cancel : () => void |} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n    let canceled = false;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    const check = () => {\n        if (canceled || !isElementVisible(el)) {\n            return;\n        }\n\n        const newWidth = el.offsetWidth;\n        const newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    win.addEventListener('resize', check);\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n        timeout = safeInterval(check, interval * 10);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        timeout = safeInterval(check, interval * 10);\n    } else {\n        timeout = safeInterval(check, interval);\n    }\n\n    return {\n        cancel: () => {\n            canceled = true;\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            timeout.cancel();\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n    const performance = getPerformance();\n\n    if (!performance) {\n        return;\n    }\n\n    // $FlowFixMe[method-unbinding]\n    if (typeof performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n\nexport function isShadowElement(element : Node) : boolean {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    return element.toString() === '[object ShadowRoot]';\n}\n\nexport function getShadowRoot(element : Node) : ?Node {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    if (isShadowElement(element)) {\n        return element;\n    }\n}\n\nexport function getShadowHost(element : Node) : ?HTMLElement {\n    const shadowRoot = getShadowRoot(element);\n\n    // $FlowFixMe\n    if (shadowRoot && shadowRoot.host) {\n        // $FlowFixMe\n        return shadowRoot.host;\n    }\n}\n\n\nexport function insertShadowSlot(element : HTMLElement) : HTMLElement {\n    const shadowHost = getShadowHost(element);\n\n    if (!shadowHost) {\n        throw new Error(`Element is not in shadow dom`);\n    }\n\n    const slotName = `shadow-slot-${ uniqueID() }`;\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n    element.appendChild(slot);\n\n    const slotProvider = document.createElement('div');\n    slotProvider.setAttribute('slot', slotName);\n    shadowHost.appendChild(slotProvider);\n\n    if (isShadowElement(shadowHost)) {\n        return insertShadowSlot(slotProvider);\n    }\n\n    return slotProvider;\n}\n\nexport function preventClickFocus(el : HTMLElement) {\n    const onFocus = (event : Event) => {\n        el.removeEventListener('focus', onFocus);\n        event.preventDefault();\n        el.blur();\n        return false;\n    };\n\n    el.addEventListener('mousedown', () => {\n        el.addEventListener('focus', onFocus);\n        setTimeout(() => {\n            el.removeEventListener('focus', onFocus);\n        }, 1);\n    });\n}\n\nexport function getStackTrace() : string {\n    try {\n        throw new Error('_');\n    }\n    catch (err) {\n        return err.stack || '';\n    }\n}\n\nfunction inferCurrentScript() : ?HTMLScriptElement {\n    try {\n        const stack = getStackTrace();\n        const stackDetails = (/.*at [^(]*\\((.*):(.+):(.+)\\)$/ig).exec(stack);\n        const scriptLocation = stackDetails && stackDetails[1];\n\n        if (!scriptLocation) {\n            return;\n        }\n\n        // $FlowFixMe[method-unbinding]\n        for (const script of Array.prototype.slice.call(document.getElementsByTagName('script')).reverse()) {\n            if (script.src && script.src === scriptLocation) {\n                return script;\n            }\n        }\n\n    } catch (err) {\n        // pass\n    }\n}\n\n// eslint-disable-next-line compat/compat\nlet currentScript = typeof document !== 'undefined' ? document.currentScript : null;\n\ntype GetCurrentScript = () => HTMLScriptElement;\n\nexport const getCurrentScript : GetCurrentScript = memoize(() => {\n    if (currentScript) {\n        return currentScript;\n    }\n\n    currentScript = inferCurrentScript();\n\n    if (currentScript) {\n        return currentScript;\n    }\n\n    throw new Error('Can not determine current script');\n});\n\nconst currentUID = uniqueID();\n\ntype GetCurrentScriptUID = () => string;\n\nexport const getCurrentScriptUID : GetCurrentScriptUID = memoize(() => {\n    let script;\n\n    try {\n        script = getCurrentScript();\n    } catch (err) {\n        return currentUID;\n    }\n\n    let uid = script.getAttribute(ATTRIBUTES.UID);\n\n    if (uid && typeof uid === 'string') {\n        return uid;\n    }\n\n    uid = script.getAttribute(`${ ATTRIBUTES.UID }-auto`);\n\n    if (uid && typeof uid === 'string') {\n        return uid;\n    }\n\n    if (script.src) {\n\n        const { src, dataset } = script;\n        const stringToHash = JSON.stringify({ src, dataset });\n        const hashedString = strHashStr(stringToHash);\n        const hashResult = hashedString.slice(hashedString.length - UID_HASH_LENGTH);\n\n        uid = `uid_${ hashResult }`;\n    } else {\n        uid = uniqueID();\n    }\n\n    script.setAttribute(`${ ATTRIBUTES.UID }-auto`, uid);\n\n    return uid;\n});\n\ntype SubmitFormOptions = {|\n    url : string,\n    target : string,\n    body? : {| [string] : string | boolean |},\n    method? : string\n|};\n\nexport function submitForm({ url, target, body, method = 'post' } : SubmitFormOptions) {\n    const form = document.createElement('form');\n    form.setAttribute('target', target);\n    form.setAttribute('method', method);\n    form.setAttribute('action', url);\n    form.style.display = 'none';\n\n    if (body) {\n        for (const key of Object.keys(body)) {\n            const input = document.createElement('input');\n            input.setAttribute('name', key);\n            input.setAttribute('value', body[key]?.toString());\n            form.appendChild(input);\n        }\n    }\n\n    getBody().appendChild(form);\n    form.submit();\n    getBody().removeChild(form);\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    const match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet, getCurrentScriptUID } from 'belter/src';\n\nexport function getGlobalKey() : string {\n    if (__POST_ROBOT__.__SCRIPT_NAMESPACE__) {\n        return `${ __POST_ROBOT__.__GLOBAL_KEY__ }_${ getCurrentScriptUID() }`;\n    } else {\n        return __POST_ROBOT__.__GLOBAL_KEY__;\n    }\n}\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    const globalKey = getGlobalKey();\n\n    if (win !== window) {\n        return win[globalKey];\n    }\n    const global : Object = win[globalKey] = win[globalKey] || {};\n    return global;\n}\n\nexport function deleteGlobal() {\n    const globalKey = getGlobalKey();\n    delete window[globalKey];\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13,\n    SPACE: 32\n};\n\nexport const ATTRIBUTES = {\n    UID: 'data-uid'\n};\n\nexport const UID_HASH_LENGTH = 30;\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore, getGlobal } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{| domain : string |}> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction resolveHelloPromise(win : CrossDomainWindowType, { domain }) : ZalgoPromise<{| domain : string |}> {\n    const helloPromises = windowStore('helloPromises');\n    const existingPromise = helloPromises.get(win);\n    if (existingPromise) {\n        existingPromise.resolve({ domain });\n    }\n    const newPromise = ZalgoPromise.resolve({ domain });\n    helloPromises.set(win, newPromise);\n    return newPromise;\n}\n\nfunction listenForHello({ on } : {| on : OnType |}) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        resolveHelloPromise(source, { domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<{| win : CrossDomainWindowType, domain : string, instanceID : string |}> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            resolveHelloPromise(win, { domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(err => {\n                // $FlowFixMe\n                if (__TEST__ && getGlobal(parent)) {\n                    throw err;\n                }\n            });\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{| domain : string |}> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n\nexport const METHOD = {\n    GET:  ('get' : 'get'),\n    POST: ('post' : 'post')\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        // $FlowFixMe method-unbinding\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        // $FlowFixMe method-unbinding\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull,\n    serializeUndefined\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>,\n    undefined? : CustomOrPrimitiveSerializer<void, typeof TYPE.UNDEFINED>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull,\n    [ TYPE.UNDEFINED ]: serializeUndefined\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nimport { serializeObject } from './object';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void,\n    data : mixed\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code, data } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code, data });\n}\n\nexport function deserializeError({ message, stack, code, data } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n\n    if (data) {\n        // $FlowFixMe\n        error.data = serializeObject(data);\n    }\n\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nimport type { Thenable } from '../types';\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() : Thenable {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { NativeSerializedType } from '../types';\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\n\nexport type SerializedUndefined = void;\n\nexport function serializeUndefined(val : void) : NativeSerializedType<typeof TYPE.UNDEFINED, SerializedUndefined> {\n    return serializeType(TYPE.UNDEFINED, val);\n}\n\nexport function deserializeUndefined() : void {\n    // pass\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull,\n    deserializeUndefined\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>,\n    undefined? : PrimitiveDeserializer<void>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull,\n    [ TYPE.UNDEFINED ]: deserializeUndefined\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : {| win? : CrossDomainWindowType, domain? : string |}) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady : ZalgoPromise<HTMLBodyElement> = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\ntype SendMessageType = {|\n    (string) : void,\n    fireAndForget : (string) => void\n|};\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : SendMessageType) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, getFrameByName, isWindowClosed, getDomainFromUrl, normalizeMockUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { BRIDGE_TIMEOUT, MESSAGE_NAME } from '../conf';\nimport { awaitWindowHello } from '../lib';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { getBridgeName, documentBodyReady, registerRemoteSendMessage, registerRemoteWindow } from './common';\n\ntype WinDetails = {|\n    win : CrossDomainWindowType,\n    domain? : ?string,\n    name? : ?string\n|};\n\nexport function listenForOpenTunnel({ on, send, receiveMessage } : {| on : OnType, send : SendType, receiveMessage : ReceiveMessageType |}) {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n\n    on(MESSAGE_NAME.OPEN_TUNNEL, ({ source, origin, data }) => {\n        const bridgePromise = globalStore('bridges').get(origin);\n\n        if (!bridgePromise) {\n            throw new Error(`Can not find bridge promise for domain ${ origin }`);\n        }\n\n        return bridgePromise.then(bridge => {\n            if (source !== bridge) {\n                throw new Error(`Message source does not matched registered bridge for domain ${ origin }`);\n            }\n\n            if (!data.name) {\n                throw new Error(`Register window expected to be passed window name`);\n            }\n\n            if (!data.sendMessage) {\n                throw new Error(`Register window expected to be passed sendMessage method`);\n            }\n\n            if (!popupWindowsByName.has(data.name)) {\n                throw new Error(`Window with name ${ data.name } does not exist, or was not opened by this window`);\n            }\n\n            const getWindowDetails = () : WinDetails => {\n                const winDetails = popupWindowsByName.get(data.name);\n                // $FlowFixMe\n                return winDetails;\n            };\n\n            if (!getWindowDetails().domain) {\n                throw new Error(`We do not have a registered domain for window ${ data.name }`);\n            }\n\n            if (getWindowDetails().domain !== origin) {\n                throw new Error(`Message origin ${ origin } does not matched registered window origin ${ getWindowDetails().domain || 'unknown' }`);\n            }\n\n            registerRemoteSendMessage(getWindowDetails().win, origin, data.sendMessage);\n\n            return {\n                sendMessage(message) {\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    if (!getWindowDetails()) {\n                        return;\n                    }\n\n                    const domain = getWindowDetails().domain;\n\n                    if (!domain) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: domain,\n                            source: getWindowDetails().win\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n            };\n        });\n    });\n}\n\nfunction openBridgeFrame(name : string, url : string) : HTMLIFrameElement {\n\n    const iframe = document.createElement(`iframe`);\n\n    iframe.setAttribute(`name`, name);\n    iframe.setAttribute(`id`,   name);\n\n    iframe.setAttribute(`style`, `display: none; margin: 0; padding: 0; border: 0px none; overflow: hidden;`);\n    iframe.setAttribute(`frameborder`, `0`);\n    iframe.setAttribute(`border`, `0`);\n    iframe.setAttribute(`scrolling`, `no`);\n    iframe.setAttribute(`allowTransparency`, `true`);\n\n    iframe.setAttribute(`tabindex`, `-1`);\n    iframe.setAttribute(`hidden`, `true`);\n    iframe.setAttribute(`title`, ``);\n    iframe.setAttribute(`role`, `presentation`);\n\n    iframe.src = url;\n\n    return iframe;\n}\n\nexport function hasBridge(url : string, domain : string) : boolean {\n    const bridges = globalStore('bridges');\n    return bridges.has(domain || getDomainFromUrl(url));\n}\n\nexport function openBridge(url : string, domain : string) : ZalgoPromise<CrossDomainWindowType> {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n    \n    domain = domain || getDomainFromUrl(url);\n    \n    return bridges.getOrSet(domain, () => ZalgoPromise.try(() => {\n\n        if (getDomain() === domain) {\n            throw new Error(`Can not open bridge on the same domain as current domain: ${ domain }`);\n        }\n\n        const name  = getBridgeName(domain);\n        const frame = getFrameByName(window, name);\n\n        if (frame) {\n            throw new Error(`Frame with name ${ name } already exists on page`);\n        }\n\n        const iframe = openBridgeFrame(name, url);\n        bridgeFrames.set(domain, iframe);\n\n        return documentBodyReady.then(body => {\n\n            body.appendChild(iframe);\n            const bridge = iframe.contentWindow;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                iframe.addEventListener('load', resolve);\n                iframe.addEventListener('error', reject);\n\n            }).then(() => {\n\n                return awaitWindowHello(bridge, BRIDGE_TIMEOUT, `Bridge ${ url }`);\n\n            }).then(() => {\n\n                return bridge;\n            });\n        });\n    }));\n}\n\nexport function linkWindow({ win, name, domain } : WinDetails) : WinDetails {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n    const popupWindowsByWin = windowStore('popupWindowsByWin');\n\n    for (const winName of popupWindowsByName.keys()) {\n        const details = popupWindowsByName.get(winName);\n        if (!details || isWindowClosed(details.win)) {\n            popupWindowsByName.del(winName);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        return { win, name, domain };\n    }\n\n    const details = popupWindowsByWin.getOrSet(win, () : WinDetails => {\n        if (!name) {\n            return { win };\n        }\n        \n        // $FlowFixMe\n        return popupWindowsByName.getOrSet(name, () : WinDetails => {\n            return { win, name };\n        });\n    });\n\n    if (details.win && details.win !== win) {\n        throw new Error(`Different window already linked for window: ${ name || 'undefined' }`);\n    }\n\n    if (name) {\n        details.name = name;\n        popupWindowsByName.set(name, details);\n    }\n\n    if (domain) {\n        details.domain = domain;\n        registerRemoteWindow(win);\n    }\n\n    popupWindowsByWin.set(win, details);\n    \n    return details;\n}\n\nexport function linkUrl(win : CrossDomainWindowType, url : string) {\n    linkWindow({ win, domain: getDomainFromUrl(url) });\n}\n\nexport function listenForWindowOpen() {\n    const windowOpen = window.open;\n\n    window.open = function windowOpenWrapper(url : string, name : string, options : string, last : mixed) : mixed {\n        const win = windowOpen.call(this, normalizeMockUrl(url), name, options, last);\n    \n        if (!win) {\n            return win;\n        }\n    \n        linkWindow({ win, name, domain: url ? getDomainFromUrl(url) : null });\n    \n        return win;\n    };\n}\n\nexport function destroyBridges() {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n\n    for (const domain of bridgeFrames.keys()) {\n        const frame = bridgeFrames.get(domain);\n        if (frame && frame.parentNode) {\n            frame.parentNode.removeChild(frame);\n        }\n    }\n    bridgeFrames.reset();\n    bridges.reset();\n}\n","/* @flow */\n\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { listenForWindowOpen, listenForOpenTunnel } from './parent';\nimport { setupOpenTunnelToParent } from './bridge';\nimport { openTunnelToOpener } from './child';\n\nexport function setupBridge({ on, send, receiveMessage } : {| on : OnType, send : SendType, receiveMessage : ReceiveMessageType |}) {\n    listenForWindowOpen();\n    listenForOpenTunnel({ on, send, receiveMessage });\n    setupOpenTunnelToParent({ send });\n    openTunnelToOpener({ on, send, receiveMessage });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { getParent, isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { getGlobal, globalStore } from '../global';\nimport type { SendType, ResponseMessageEvent } from '../types';\n\nfunction cleanTunnelWindows() {\n    const tunnelWindows = globalStore('tunnelWindows');\n\n    for (const key of tunnelWindows.keys()) {\n        const tunnelWindow = tunnelWindows[key];\n\n        try {\n            noop(tunnelWindow.source);\n        } catch (err) {\n            tunnelWindows.del(key);\n            continue;\n        }\n\n        if (isWindowClosed(tunnelWindow.source)) {\n            tunnelWindows.del(key);\n        }\n    }\n}\n\ntype TunnelWindowDataType = {|\n    name : string,\n    source : CrossDomainWindowType,\n    canary : () => void,\n    sendMessage : (message : string) => void\n|};\n\nfunction addTunnelWindow({ name, source, canary, sendMessage } : TunnelWindowDataType) : string {\n    cleanTunnelWindows();\n    const id = uniqueID();\n    const tunnelWindows = globalStore('tunnelWindows');\n    tunnelWindows.set(id, { name, source, canary, sendMessage });\n    return id;\n}\n\nexport function setupOpenTunnelToParent({ send } : {| send : SendType |}) {\n    getGlobal(window).openTunnelToParent = function openTunnelToParent({ name, source, canary, sendMessage } : TunnelWindowDataType) : ZalgoPromise<ResponseMessageEvent> {\n\n        const tunnelWindows = globalStore('tunnelWindows');\n        const parentWindow = getParent(window);\n    \n        if (!parentWindow) {\n            throw new Error(`No parent window found to open tunnel to`);\n        }\n    \n        const id = addTunnelWindow({ name, source, canary, sendMessage });\n    \n        return send(parentWindow, MESSAGE_NAME.OPEN_TUNNEL, {\n    \n            name,\n    \n            sendMessage() {\n    \n                const tunnelWindow = tunnelWindows.get(id);\n    \n                try {\n                    // IE gets antsy if you try to even reference a closed window\n                    noop(tunnelWindow && tunnelWindow.source);\n                } catch (err) {\n                    tunnelWindows.del(id);\n                    return;\n                }\n    \n                if (!tunnelWindow || !tunnelWindow.source || isWindowClosed(tunnelWindow.source)) {\n                    return;\n                }\n    \n                try {\n                    tunnelWindow.canary();\n                } catch (err) {\n                    return;\n                }\n    \n                // $FlowFixMe[object-this-reference]\n                tunnelWindow.sendMessage.apply(this, arguments);\n            }\n    \n        }, { domain: WILDCARD });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isSameDomain, getOpener, getDomain, getFrameByName, assertSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { getGlobal, windowStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { needsBridge, registerRemoteWindow, rejectRemoteSendMessage, registerRemoteSendMessage, getBridgeName } from './common';\n\nfunction awaitRemoteBridgeForWindow (win : CrossDomainWindowType) : ZalgoPromise<?CrossDomainWindowType> {\n    return windowStore('remoteBridgeAwaiters').getOrSet(win, () => {\n        return ZalgoPromise.try(() => {\n            const frame = getFrameByName(win, getBridgeName(getDomain()));\n\n            if (!frame) {\n                return;\n            }\n\n            if (isSameDomain(frame) && getGlobal(assertSameDomain(frame))) {\n                return frame;\n            }\n\n            return new ZalgoPromise(resolve => {\n\n                let interval;\n                let timeout; // eslint-disable-line prefer-const\n\n                interval = setInterval(() => { // eslint-disable-line prefer-const\n                    if (frame && isSameDomain(frame) && getGlobal(assertSameDomain(frame))) {\n                        clearInterval(interval);\n                        clearTimeout(timeout);\n                        return resolve(frame);\n                    }\n                }, 100);\n\n                timeout = setTimeout(() => {\n                    clearInterval(interval);\n                    return resolve();\n                }, 2000);\n            });\n        });\n    });\n}\n\nexport function openTunnelToOpener({ on, send, receiveMessage } : {| on : OnType, send : SendType, receiveMessage : ReceiveMessageType |}) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const opener = getOpener(window);\n        \n        if (!opener || !needsBridge({ win: opener })) {\n            return;\n        }\n\n        registerRemoteWindow(opener);\n\n        return awaitRemoteBridgeForWindow(opener).then(bridge => {\n\n            if (!bridge) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: no bridge found in opener`));\n            }\n\n            if (!window.name) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: window does not have a name`));\n            }\n\n            return getGlobal(assertSameDomain(bridge)).openTunnelToParent({\n\n                name: window.name,\n\n                source: window,\n\n                canary() {\n                    // pass\n                },\n\n                sendMessage(message) {\n\n                    try {\n                        noop(window);\n                    } catch (err) {\n                        return;\n                    }\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            // $FlowFixMe[object-this-reference]\n                            origin: this.origin,\n                            // $FlowFixMe[object-this-reference]\n                            source: this.source\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n\n            }).then(({ source, origin, data }) => {\n\n                if (source !== opener) {\n                    throw new Error(`Source does not match opener`);\n                }\n\n                registerRemoteSendMessage(source, origin, data.sendMessage);\n\n            }).catch(err => {\n\n                rejectRemoteSendMessage(opener, err);\n                throw err;\n            });\n        });\n    });\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, closeWindow,\n    type DomainMatcher, getOpener, WINDOW_TYPE, isWindow, assertSameDomain, getFrameForWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise, noop, submitForm } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE, METHOD } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SetLocationOptions = {|\n    method? : $Values<typeof METHOD>,\n    body? : {|\n        [string] : string | boolean\n    |}\n|};\n\ntype SerializedWindowType = {|\n    id : string,\n    getType : () => ZalgoPromise<$Values<typeof WINDOW_TYPE>>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (url : string, opts? : SetLocationOptions) => ZalgoPromise<void>,\n    getName : () => ZalgoPromise<?string>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nfunction getSerializedWindow(winPromise : ZalgoPromise<CrossDomainWindowType>, { send, id = uniqueID() } : {| send : SendType, id? : string |}) : SerializedWindowType {\n    \n    let windowNamePromise = winPromise.then(win => {\n        if (isSameDomain(win)) {\n            return assertSameDomain(win).name;\n        }\n    });\n    \n    const windowTypePromise = winPromise.then(window => {\n        if (!isWindowClosed(window)) {\n            return getOpener(window) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME;\n        } else {\n            throw new Error(`Window is closed, can not determine type`);\n        }\n    });\n\n    windowNamePromise.catch(noop);\n    windowTypePromise.catch(noop);\n\n    const getName = () => winPromise.then(win => {\n        if (isWindowClosed(win)) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            return assertSameDomain(win).name;\n        }\n\n        return windowNamePromise;\n    });\n\n    const getDefaultSetLocationOptions = () => {\n        // $FlowFixMe\n        return {};\n    };\n\n    const setLocation = (href : string, opts? : SetLocationOptions = getDefaultSetLocationOptions()) => winPromise.then(win => {\n        const domain = `${ window.location.protocol }//${ window.location.host }`;\n        const { method = METHOD.GET, body } = opts;\n\n        if (href.indexOf('/') === 0) {\n            href = `${ domain }${ href }`;\n        } else if (!href.match(/^https?:\\/\\//) && href.indexOf(domain) !== 0) {\n            throw new Error(`Expected url to be http or https url, or absolute path, got ${ JSON.stringify(href) }`);\n        }\n\n        if (method === METHOD.POST) {\n            return getName().then(name => {\n                if (!name) {\n                    throw new Error(`Can not post to window without target name`);\n                }\n\n                submitForm({\n                    url:    href,\n                    target: name,\n                    method,\n                    body\n                });\n            });\n        } else if (method === METHOD.GET) {\n            if (isSameDomain(win)) {\n                try {\n                    if (win.location && typeof win.location.replace === 'function') {\n                        // $FlowFixMe\n                        win.location.replace(href);\n                        return;\n                    }\n                } catch (err) {\n                    // pass\n                }\n            }\n\n            win.location = href;\n\n        } else {\n            throw new Error(`Unsupported method: ${ method }`);\n        }\n    });\n\n    return {\n        id,\n        getType: () => {\n            return windowTypePromise;\n        },\n        getInstanceID: memoizePromise(() => winPromise.then(win => getWindowInstanceID(win, { send }))),\n        close:         () => winPromise.then(closeWindow),\n        getName,\n        focus:         () => winPromise.then(win => {\n            win.focus();\n        }),\n        isClosed: () => winPromise.then(win => {\n            return isWindowClosed(win);\n        }),\n        setLocation,\n        setName: (name) => winPromise.then(win => {\n            if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                linkWindow({ win, name });\n            }\n\n            const sameDomain = isSameDomain(win);\n            const frame = getFrameForWindow(win);\n\n            if (!sameDomain) {\n                throw new Error(`Can not set name for cross-domain window: ${ name }`);\n            }\n\n            assertSameDomain(win).name = name;\n            if (frame) {\n                frame.setAttribute('name', name);\n            }\n\n            windowNamePromise = ZalgoPromise.resolve(name);\n        })\n    };\n}\n\nexport class ProxyWindow {\n\n    id : string\n    isProxyWindow : true = true\n    serializedWindow : SerializedWindowType\n    actualWindow : ?CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n    name : string\n\n    constructor({ send, win, serializedWindow } : {| win? : CrossDomainWindowType, serializedWindow? : SerializedWindowType, send : SendType |}) {\n        this.actualWindowPromise = new ZalgoPromise();\n        this.serializedWindow = serializedWindow || getSerializedWindow(this.actualWindowPromise, { send });\n        \n        globalStore('idToProxyWindow').set(this.getID(), this);\n        if (win) {\n            this.setWindow(win, { send });\n        }\n    }\n\n    getID() : string {\n        return this.serializedWindow.id;\n    }\n\n    getType() : ZalgoPromise<$Values<typeof WINDOW_TYPE>> {\n        return this.serializedWindow.getType();\n    }\n\n    isPopup() : ZalgoPromise<boolean> {\n        return this.getType().then(type => {\n            return type === WINDOW_TYPE.POPUP;\n        });\n    }\n\n    setLocation(href : string, opts? : SetLocationOptions) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setLocation(href, opts).then(() => this);\n    }\n\n    getName() : ZalgoPromise<?string> {\n        return this.serializedWindow.getName();\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setName(name).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.close().then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        const isPopupPromise = this.isPopup();\n        const getNamePromise = this.getName();\n\n        const reopenPromise = ZalgoPromise.hash({ isPopup: isPopupPromise, name: getNamePromise }).then(({ isPopup, name }) => {\n            if (isPopup && name) {\n                window.open('', name);\n            }\n        });\n        const focusPromise = this.serializedWindow.focus();\n\n        return ZalgoPromise.all([\n            reopenPromise,\n            focusPromise\n        ]).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return this.serializedWindow.isClosed();\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType, { send } : {| send : SendType |}) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(this.actualWindow);\n        this.serializedWindow = getSerializedWindow(this.actualWindowPromise, { send, id: this.getID() });\n        windowStore('winToProxyWindow').set(win, this);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.hash({\n                proxyInstanceID:       this.getInstanceID(),\n                knownWindowInstanceID: getWindowInstanceID(win, { send })\n            }).then(({ proxyInstanceID, knownWindowInstanceID }) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win, { send });\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        return this.serializedWindow.getInstanceID();\n    }\n\n    shouldClean() : boolean {\n        return Boolean(this.actualWindow && isWindowClosed(this.actualWindow));\n    }\n\n    serialize() : SerializedWindowType {\n        return this.serializedWindow;\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : {| send : SendType |}) : SerializedWindowType {\n        cleanupProxyWindows();\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedWindowType, { send } : {| send : SendType |}) : ProxyWindow {\n        cleanupProxyWindows();\n        return globalStore('idToProxyWindow').get(serializedWindow.id) || new ProxyWindow({ serializedWindow, send });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : {| send : SendType |}) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        const actualWindow : CrossDomainWindowType = win;\n        \n        return windowStore('winToProxyWindow').get(actualWindow) || new ProxyWindow({ win: actualWindow, send });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedWindowType>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : {| send : SendType |}) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedWindowType, { send } : {| send : SendType |}) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { send });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex, arrayFrom } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction stringifyArguments(args : $ReadOnlyArray<mixed> = []) : string {\n    return arrayFrom(args).map(arg => {\n        if (typeof arg === 'string') {\n            return `'${ arg }'`;\n        }\n        if (arg === undefined) {\n            return 'undefined';\n        }\n        if (arg === null) {\n            return 'null';\n        }\n        if (typeof arg === 'boolean') {\n            return arg.toString();\n        }\n        if (Array.isArray(arg)) {\n            return '[ ... ]';\n        }\n        if (typeof arg === 'object') {\n            return '{ ... }';\n        }\n        if (typeof arg === 'function') {\n            return '() => { ... }';\n        }\n        return `<${ typeof arg }>`;\n    }).join(', ');\n}\n\nfunction listenForFunctionCalls({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : {| source : CrossDomainWindowType, origin : string, data : Object |}) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source, { send }).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    // $FlowFixMe\n                    if (err.stack) {\n                        // $FlowFixMe\n                        err.stack = `Remote call to ${ name }(${ stringifyArguments(data.args) }) failed\\n\\n${ err.stack }`;\n                    }\n\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {|\n    id : string,\n    name : string\n|}>;\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype SerializableFunction<T> = {\n    () : ZalgoPromise<T> | T,\n    __id__? : string,\n    __name__? : string\n};\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : SerializableFunction<T>, key : string, { on, send } : {| on : OnType, send : SendType |}) : SerializedFunction {\n    listenForFunctionCalls({ on, send });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    let name = val.__name__ || val.name || key;\n\n    if (typeof name === 'string' && typeof name.indexOf === 'function' && name.indexOf('anonymous::') === 0) {\n        name = name.replace('anonymous::', `${ key }::`);\n    }\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : {| id : string, name : string |}, { send } : {| send : SendType |}) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    // $FlowFixMe[method-unbinding]\n                    const args = Array.prototype.slice.call(arguments);\n\n                    if (opts.fireAndForget) {\n                        return send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, fireAndForget: true });\n                    } else {\n                        return send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, fireAndForget: false })\n                            .then(res => res.data.result);\n                    }\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `Remote call to ${ name }(${ stringifyArguments(arguments) }) failed\\n\\n${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : {| on : OnType, send : SendType |}) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { send } : {| on : OnType, send : SendType |}) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { send })\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {|\n    then : SerializedFunction\n|}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : {| on : OnType, send : SendType |}) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : {| then : Function |}) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\ntype SendStrategies = {|\n    [$Values<typeof SEND_STRATEGY>] : (CrossDomainWindowType, string, string) => void\n|};\n\nexport const SEND_MESSAGE_STRATEGIES : SendStrategies = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n    if (domain.indexOf(PROTOCOL.FILE) === 0) {\n        domain = WILDCARD;\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n\n        if (domain.indexOf(PROTOCOL.MOCK) === 0) {\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send message to mock domain ${ domain }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            const windowDomain = getDomain(win);\n                \n            if (windowDomain !== domain) {\n                throw new Error(`Mock domain target ${ domain } does not match window domain ${ windowDomain }`);\n            }\n\n            // $FlowFixMe\n            domain = getActualDomain(win);\n\n        }\n    }\n\n    win.postMessage(serializedMessage, domain);\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            throw new Error(`Bridge not needed for browser`);\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            throw new Error(`Global messaging not needed for browser`);\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { stringifyError, noop } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport { windowStore, getGlobalKey } from '../../global';\nimport type { Message, PackedMessages } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nfunction packMessages(messages : $ReadOnlyArray<Message>) : PackedMessages {\n    return {\n        [ getGlobalKey() ]: messages\n    };\n}\n\nexport function sendMessage(win : CrossDomainWindowType, domain : string, message : Message, { on, send } : {| on : OnType, send : SendType |}) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const messageBuffer = windowStore();\n\n        const domainBuffer = messageBuffer.getOrSet(win, () => ({}));\n\n        domainBuffer.buffer = domainBuffer.buffer || [];\n        domainBuffer.buffer.push(message);\n\n        domainBuffer.flush = domainBuffer.flush || ZalgoPromise.flush().then(() => {\n            if (isWindowClosed(win)) {\n                throw new Error('Window is closed');\n            }\n\n            const serializedMessage = serializeMessage(win, domain, packMessages(domainBuffer.buffer || []), { on, send });\n            delete domainBuffer.buffer;\n\n            const strategies = Object.keys(SEND_MESSAGE_STRATEGIES);\n            const errors = [];\n\n            for (const strategyName of strategies) {\n                try {\n                    SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n                } catch (err) {\n                    errors.push(err);\n                }\n            }\n\n            if (errors.length === strategies.length) {\n                throw new Error(`All post-robot messaging strategies failed:\\n\\n${ errors.map((err, i) => `${ i }. ${ stringifyError(err) }`).join('\\n\\n') }`);\n            }\n        });\n\n        return domainBuffer.flush.then(() => {\n            delete domainBuffer.flush;\n        });\n    }).then(noop);\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({| source : CrossDomainWindowType, origin : string, data : mixed |}) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean,\n    cancelled? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function cancelResponseListeners() {\n    const responseListeners = globalStore('responseListeners');\n    for (const hash of responseListeners.keys()) {\n        const listener = responseListeners.get(hash);\n        if (listener) {\n            listener.cancelled = true;\n        }\n        responseListeners.del(hash);\n    }\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : {| name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) |}) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : {| name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?DomainMatcher |}, listener : RequestListenerType) : {| cancel : () => void |} {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const nameListeners = requestListeners.getOrSet(win, () => ({}));\n    const domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    const strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                delete nameListeners[name];\n            }\n\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, stringifyError, uniqueID } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, ResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport function handleRequest(source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : {| on : OnType, send : SendType |}) : ZalgoPromise<void> {\n\n    const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n    const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n    if (__DEBUG__) {\n        // eslint-disable-next-line no-console\n        console.info('receive::req', logName, origin, '\\n\\n', message.data);\n    }\n\n    function sendAck() : ZalgoPromise<void> {\n        return ZalgoPromise.flush().then(() => {\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            try {\n                return sendMessage(source, origin, {\n                    id:     uniqueID(),\n                    origin: getDomain(window),\n                    type:   MESSAGE_TYPE.ACK,\n                    hash:   message.hash,\n                    name:   message.name\n                }, { on, send });\n            } catch (err) {\n                throw new Error(`Send ack message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n            }\n        });\n    }\n\n\n    function sendResponse(ack : $Values<typeof MESSAGE_ACK>, data : ?Object, error : ?mixed) : ZalgoPromise<void> {\n        return ZalgoPromise.flush().then(() => {\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            if (__DEBUG__) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    console.info('respond::res', logName, origin, '\\n\\n', data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    console.error('respond::err', logName, origin, '\\n\\n', error); // eslint-disable-line no-console\n                }\n            }\n\n            try {\n                return sendMessage(source, origin, {\n                    id:     uniqueID(),\n                    origin: getDomain(window),\n                    type:   MESSAGE_TYPE.RESPONSE,\n                    hash:   message.hash,\n                    name:   message.name,\n                    ack,\n                    data,\n                    error\n                }, { on, send });\n            } catch (err) {\n                throw new Error(`Send response message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n            }\n        });\n    }\n\n    \n    return ZalgoPromise.all([\n        sendAck(),\n\n        ZalgoPromise.try(() => {\n\n            if (!options) {\n                throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n            }\n\n            if (!matchDomain(options.domain, origin)) {\n                throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n            }\n\n            const data = message.data;\n\n            return options.handler({ source, origin, data });\n\n        }).then(data => {\n            return sendResponse(MESSAGE_ACK.SUCCESS, data);\n\n        }, error => {\n            return sendResponse(MESSAGE_ACK.ERROR, null, error);\n        })\n\n    ]).then(noop).catch(err => {\n        if (options && options.handleError) {\n            return options.handleError(err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport function handleAck(source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n    if (isResponseListenerErrored(message.hash)) {\n        return;\n    }\n\n    const options = getResponseListener(message.hash);\n\n    if (!options) {\n        throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n    }\n\n    try {\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n    \n        if (source !== options.win) {\n            throw new Error(`Ack source does not match registered window`);\n        }\n    } catch (err) {\n        options.promise.reject(err);\n    }\n\n    options.ack = true;\n}\n\nexport function handleResponse(source : CrossDomainWindowType, origin : string, message : ResponseMessage) : void | ZalgoPromise<void> {\n\n    if (isResponseListenerErrored(message.hash)) {\n        return;\n    }\n\n    const options = getResponseListener(message.hash);\n\n    if (!options) {\n        throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n    }\n\n    if (!matchDomain(options.domain, origin)) {\n        throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n    }\n\n    if (source !== options.win) {\n        throw new Error(`Response source does not match registered window`);\n    }\n\n    deleteResponseListener(message.hash);\n\n    const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n    if (message.ack === MESSAGE_ACK.ERROR) {\n        if (__DEBUG__) {\n            console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n        }\n\n        options.promise.reject(message.error);\n\n    } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n        if (__DEBUG__) {\n            console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n        }\n\n        options.promise.resolve({ source, origin, data: message.data });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow, PROTOCOL  } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport type { Message } from '../types';\nimport { MESSAGE_TYPE } from '../../conf';\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore, getGlobalKey } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { handleRequest, handleResponse, handleAck } from './types';\n\nfunction deserializeMessages(message : string, source : CrossDomainWindowType, origin : string, { on, send } : {| on : OnType, send : SendType |}) : ?$ReadOnlyArray<Message> {\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    const parseMessages = parsedMessage[getGlobalKey()];\n\n    if (!Array.isArray(parseMessages)) {\n        return;\n    }\n\n    return parseMessages;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : {| on : OnType, send : SendType |}) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    try {\n        if (!window || window.closed || !event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        if (isWindowClosed(source)) {\n            return;\n        }\n\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const messages = deserializeMessages(data, source, origin, { on, send });\n\n    if (!messages) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    for (const message of messages) {\n        if (receivedMessages.has(message.id)) {\n            return;\n        }\n\n        receivedMessages.set(message.id, true);\n\n        if (isWindowClosed(source) && !message.fireAndForget) {\n            return;\n        }\n\n        if (message.origin.indexOf(PROTOCOL.FILE) === 0) {\n            origin = `${ PROTOCOL.FILE }//`;\n        }\n\n        try {\n            if (message.type === MESSAGE_TYPE.REQUEST) {\n                handleRequest(source, origin, message, { on, send });\n            } else if (message.type === MESSAGE_TYPE.RESPONSE) {\n                handleResponse(source, origin, message);\n            } else if (message.type === MESSAGE_TYPE.ACK) {\n                handleAck(source, origin, message);\n            }\n        } catch (err) {\n            setTimeout(() => {\n                throw err;\n            }, 0);\n        }\n    }\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : {| on : OnType, send : SendType |}) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : {| origin : string |}\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : {| on : OnType, send : SendType |}) {\n    ZalgoPromise.try(() => {\n        try {\n            noop(event.source);\n        } catch (err) {\n            return;\n        }\n\n        const source = event.source || event.sourceElement;\n        let origin = event.origin || (event.originalEvent && event.originalEvent.origin);\n        const data = event.data;\n\n        if (origin === 'null') {\n            origin = `${ PROTOCOL.FILE }//`;\n        }\n\n        if (!source) {\n            return;\n        }\n\n        if (!origin) {\n            throw new Error(`Post message did not have origin domain`);\n        }\n\n        if (__TEST__) {\n            if (needsGlobalMessagingForBrowser() && isSameTopWindow(source, window) === false) {\n                return;\n            }\n        }\n\n        receiveMessage({ source, origin, data }, { on, send });\n    });\n}\n\nexport function listenForMessages({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore().getOrSet('postMessageListener', () => {\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n\nexport function stopListenForMessages() {\n    const listener = globalStore().get('postMessageListener');\n    if (listener) {\n        listener.cancel();\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nconst getDefaultServerOptions = () : ServerOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    options = options || getDefaultServerOptions();\n    if (typeof options === 'function') {\n        handler = options;\n        options = getDefaultServerOptions();\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    options = options || {};\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    const win = options.window;\n    const domain = options.domain;\n\n    const listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    const requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\ntype CancelableZalgoPromise<T> = ZalgoPromise<T> & {|\n    cancel : () => void\n|};\n\nexport function once(name : string, options? : ServerOptionsType | HandlerType, handler? : HandlerType) : CancelableZalgoPromise<{| source : mixed, origin : string, data : Object |}> {\n    \n    options = options || getDefaultServerOptions();\n    if (typeof options === 'function') {\n        handler = options;\n        options = getDefaultServerOptions();\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    // $FlowFixMe\n    promise.cancel = listener.cancel;\n\n    // $FlowFixMe\n    return promise;\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop, safeInterval, stringify, stringifyError } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN, RESPONSE_CYCLE_TIME } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport type { SendType } from '../types';\n\nimport { on } from './on';\n\nfunction validateOptions(name : string, win : CrossDomainWindowType, domain : ?DomainMatcher) {\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (domain) {\n        if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n            throw new TypeError(`Can not send ${ name }. Expected domain ${ JSON.stringify(domain) } to be a string, array, or regex`);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        throw new Error(`Can not send ${ name }. Target window is closed`);\n    }\n}\n\nfunction normalizeDomain(win : CrossDomainWindowType, targetDomain : DomainMatcher, actualDomain : ?string, { send } : {| send : SendType |}) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof targetDomain === 'string') {\n            return targetDomain;\n        }\n\n        return ZalgoPromise.try(() => {\n            return actualDomain || sayHello(win, { send }).then(({ domain }) => domain);\n\n        }).then(normalizedDomain => {\n            if (!matchDomain(targetDomain, targetDomain)) {\n                throw new Error(`Domain ${ stringify(targetDomain) } does not match ${ stringify(targetDomain) }`);\n            }\n\n            return normalizedDomain;\n        });\n    });\n}\n\nexport const send : SendType = (win, name, data, options) => {\n    options = options || {};\n    const domainMatcher = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    // $FlowFixMe\n    return ZalgoPromise.try(() => {\n        validateOptions(name, win, domainMatcher);\n\n        if (isAncestor(window, win)) {\n            return awaitWindowHello(win, childTimeout);\n        }\n        \n    }).then(({ domain: actualDomain } = {}) => {\n\n        return normalizeDomain(win, domainMatcher, actualDomain, { send });\n    }).then(targetDomain => {\n        const domain = targetDomain;\n\n        const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n        if (__DEBUG__) {\n            console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n        }\n\n        const promise = new ZalgoPromise();\n        const hash = `${ name }_${ uniqueID() }`;\n\n        if (!fireAndForget) {\n            const responseListener : ResponseListenerType = { name, win, domain, promise };\n            addResponseListener(hash, responseListener);\n\n            const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n            reqPromises.push(promise);\n\n            promise.catch(() => {\n                markResponseListenerErrored(hash);\n                deleteResponseListener(hash);\n            });\n\n            const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n            const totalResTimeout = responseTimeout;\n\n            let ackTimeout = totalAckTimeout;\n            let resTimeout = totalResTimeout;\n        \n            const interval = safeInterval(() => {\n                if (isWindowClosed(win)) {\n                    return promise.reject(new Error(`Window closed for ${ name } before ${ responseListener.ack ? 'response' : 'ack' }`));\n                }\n\n                if (responseListener.cancelled) {\n                    return promise.reject(new Error(`Response listener was cancelled for ${ name }`));\n                }\n\n                ackTimeout = Math.max(ackTimeout - RESPONSE_CYCLE_TIME, 0);\n                if (resTimeout !== -1) {\n                    resTimeout = Math.max(resTimeout - RESPONSE_CYCLE_TIME, 0);\n                }\n\n                if (!responseListener.ack && ackTimeout === 0) {\n                    return promise.reject(new Error(`No ack for postMessage ${ logName } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                } else if (resTimeout === 0) {\n                    return promise.reject(new Error(`No response for postMessage ${ logName } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                }\n            }, RESPONSE_CYCLE_TIME);\n\n            promise.finally(() => {\n                interval.cancel();\n                reqPromises.splice(reqPromises.indexOf(promise, 1));\n            }).catch(noop);\n        }\n\n        return sendMessage(win, domain, {\n            id:     uniqueID(),\n            origin: getDomain(window),\n            type:   MESSAGE_TYPE.REQUEST,\n            hash,\n            name,\n            data,\n            fireAndForget\n        }, { on, send }).then(() => {\n            return fireAndForget ? promise.resolve() : promise;\n        }, err => {\n            throw new Error(`Send request message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n        });\n    });\n};\n","/* @flow */\n\nimport { setup } from './setup';\nimport { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge, needsBridgeForBrowser, hasBridge,\n    needsBridgeForWin, needsBridgeForDomain, destroyBridges } from './bridge';\n\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\n\nexport * from './types';\nexport { ProxyWindow } from './serialize';\nexport { setup, destroy, serializeMessage, deserializeMessage, createProxyWindow, toProxyWindow } from './setup';\nexport { on, once, send } from './public';\nexport { markWindowKnown } from './lib';\nexport { cleanUpWindow } from './clean';\n\n// $FlowFixMe\nexport let bridge;\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n    bridge = { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge,\n        needsBridgeForBrowser, hasBridge, needsBridgeForWin, needsBridgeForDomain, destroyBridges };\n}\n\nif (__POST_ROBOT__.__AUTO_SETUP__) {\n    setup();\n}\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT : number = __TEST__ ? 2000 : -1;\nexport const RESPONSE_CYCLE_TIME = 500;\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, stopListenForMessages, receiveMessage, setupGlobalReceiveMessage, cancelResponseListeners } from './drivers';\nimport { getGlobal, deleteGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function createProxyWindow(win? : CrossDomainWindowType) : ProxyWindow {\n    return new ProxyWindow({ send, win });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        setupGlobalReceiveMessage({ on, send });\n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n    }\n}\n\nexport function destroy() {\n    cancelResponseListeners();\n    stopListenForMessages();\n    deleteGlobal();\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindowClosed } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window ${ isWindowClosed(win) ? 'closed' : 'cleaned up' } before response`)).catch(noop);\n    }\n}\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { getCurrentScriptUID } from 'belter/src';\n\nexport function getGlobalKey() : string {\n    if (__ZOID__.__SCRIPT_NAMESPACE__) {\n        return `${ __ZOID__.__GLOBAL_KEY__ }_${ getCurrentScriptUID() }`;\n    } else {\n        return __ZOID__.__GLOBAL_KEY__;\n    }\n}\n\nexport function getGlobal<T>(win : CrossDomainWindowType) : T {\n    const globalKey = getGlobalKey();\n\n    if (!isSameDomain(win)) {\n        throw new Error(`Can not get global for window on different domain`);\n    }\n\n    if (!win[globalKey]) {\n        win[globalKey] = {};\n    }\n\n    return win[globalKey];\n}\n\nexport function tryGlobal<T, R>(win : CrossDomainWindowType, handler : (T) => R) : ?R {\n    try {\n        return handler(getGlobal(win));\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function destroyGlobal() {\n    const globalKey = getGlobalKey();\n    delete window[globalKey];\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport type ProxyObject<T> = {|\n    get : () => ZalgoPromise<T>\n|};\n\nexport function getProxyObject<T>(obj : T) : ProxyObject<T> {\n    return {\n        get() : ZalgoPromise<T> {\n            return ZalgoPromise.try(() => {\n                // $FlowFixMe[object-this-reference]\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call get on proxy object from a remote window`);\n                }\n    \n                return obj;\n            });\n        }\n    };\n}\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   ('string' : 'string'),\n    OBJECT:   ('object' : 'object'),\n    FUNCTION: ('function' : 'function'),\n    BOOLEAN:  ('boolean' : 'boolean'),\n    NUMBER:   ('number' : 'number'),\n    ARRAY:    ('array' : 'array')\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: ('opener' : 'opener'),\n    PARENT: ('parent' : 'parent'),\n    GLOBAL: ('global' : 'global')\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n\nexport const EVENT = {\n    RENDER:   'zoid-render',\n    RENDERED: 'zoid-rendered',\n    DISPLAY:  'zoid-display',\n    ERROR:    'zoid-error',\n    CLOSE:    'zoid-close',\n    DESTROY:  'zoid-destroy',\n    PROPS:    'zoid-props',\n    RESIZE:   'zoid-resize',\n    FOCUS:    'zoid-focus'\n};\n\nexport const METHOD = {\n    GET:  ('get' : 'get'),\n    POST: ('post' : 'post')\n};\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { PropsDefinitionType, PropsType, ChildPropsType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\n// $FlowFixMe\nexport function normalizeChildProp<P, T, X>(propsDef : PropsDefinitionType<P, X>, props : PropsType<P>, key : string, value : ?T, helpers : ChildHelpers<P, X>) : ?T  {\n    if (!propsDef.hasOwnProperty(key)) {\n        return value;\n    }\n\n    const prop = propsDef[key];\n\n    if (typeof prop.childDecorate === 'function') {\n        const { uid, tag, close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide, export: xport, getSiblings } = helpers;\n        const decoratedValue = prop.childDecorate({ value, uid, tag, close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide, export: xport, getSiblings });\n\n        // $FlowFixMe\n        return decoratedValue;\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P, X>(parentComponentWindow : CrossDomainWindowType, propsDef : PropsDefinitionType<P, X>, props : PropsType<P>, origin : string, helpers : ChildHelpers<P, X>, isUpdate : boolean = false) : ChildPropsType<P, X> {\n\n    const result = {};\n\n    for (const key of Object.keys(props)) {\n        const prop = propsDef[key];\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        // $FlowFixMe\n        const value = normalizeChildProp(propsDef, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of Object.keys(propsDef)) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(propsDef, props, key, undefined, helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n\nimport { inlineMemoize, stringifyError, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nfunction parseChildWindowName(windowName : string) : ChildPayload {\n    return inlineMemoize(parseChildWindowName, () => {\n        if (!windowName) {\n            throw new Error(`No window name`);\n        }\n    \n        const [ , zoidcomp, name, encodedPayload ] = windowName.split('__');\n    \n        if (zoidcomp !== ZOID) {\n            throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n        }\n    \n        if (!name) {\n            throw new Error(`Expected component name`);\n        }\n    \n        if (!encodedPayload) {\n            throw new Error(`Expected encoded payload`);\n        }\n    \n        try {\n            return JSON.parse(base64decode(encodedPayload));\n        } catch (err) {\n            throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n        }\n    }, [ windowName ]);\n}\n\nexport function getChildPayload() : ?ChildPayload {\n    try {\n        return parseChildWindowName(window.name);\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow,\n    type CrossDomainWindowType, onCloseWindow, assertSameDomain } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage, type CrossDomainFunctionType } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, onResize, elementReady, assertExists, noop } from 'belter/src';\n\nimport { getGlobal, tryGlobal } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { NormalizedComponentOptionsType, getSiblingsPropType } from '../component';\nimport type { PropsType, ChildPropsType } from '../component/props';\nimport type { WindowRef, PropRef, ParentExportsType } from '../parent';\nimport type { StringMatcherType } from '../types';\n\nimport { normalizeChildProps } from './props';\nimport { getChildPayload } from './window';\n\nexport type ChildExportsType<P> = {|\n    updateProps : CrossDomainFunctionType<[ PropsType<P> ], void>,\n    close : CrossDomainFunctionType<[], void>\n|};\n\nexport type ChildHelpers<P, X> = {|\n    uid : string,\n    tag : string,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onProps : ((PropsType<P>) => void) => void,\n    getParent : () => CrossDomainWindowType,\n    getParentDomain : () => string,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>,\n    export : (X) => ZalgoPromise<void>,\n    getSiblings : getSiblingsPropType\n|};\n\nfunction getParentComponentWindow(ref : WindowRef) : CrossDomainWindowType {\n    const { type } = ref;\n\n    if (type === WINDOW_REFERENCES.OPENER) {\n        return assertExists('opener', getOpener(window));\n\n    } else if (type === WINDOW_REFERENCES.PARENT && typeof ref.distance === 'number') {\n        return assertExists('parent', getNthParentFromTop(window, ref.distance));\n\n    } else if (type === WINDOW_REFERENCES.GLOBAL && ref.uid && typeof ref.uid === 'string') {\n        const { uid } = ref;\n        const ancestor = getAncestor(window);\n\n        if (!ancestor) {\n            throw new Error(`Can not find ancestor window`);\n        }\n\n        for (const frame of getAllFramesInWindow(ancestor)) {\n            if (isSameDomain(frame)) {\n                const win = tryGlobal(frame, global => global.windows && global.windows[uid]);\n\n                if (win) {\n                    return win;\n                }\n            }\n        }\n    }\n\n    throw new Error(`Unable to find ${ type } parent component window`);\n}\n\nfunction checkParentDomain(allowedParentDomains : StringMatcherType, domain : string) {\n    if (!matchDomain(allowedParentDomains, domain)) {\n        throw new Error(`Can not be rendered by domain: ${ domain }`);\n    }\n}\n\nfunction focus() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.focus();\n    });\n}\n\nfunction destroy() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.close();\n    });\n}\n\nfunction getPropsByRef<P>(parentComponentWindow : CrossDomainWindowType, domain : string, propRef : PropRef) : (PropsType<P>) {\n    let props;\n\n    if (propRef.type === INITIAL_PROPS.RAW) {\n        props = propRef.value;\n    } else if (propRef.type === INITIAL_PROPS.UID) {\n        if (!isSameDomain(parentComponentWindow)) {\n            throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n        }\n\n        const global = getGlobal(parentComponentWindow);\n        props = assertExists('props', global && global.props[propRef.uid]);\n    }\n\n    if (!props) {\n        throw new Error(`Could not find props`);\n    }\n\n    return deserializeMessage(parentComponentWindow, domain, props);\n}\n\nexport type ChildComponent<P, X> = {|\n    getProps : () => ChildPropsType<P, X>,\n    init : () => ZalgoPromise<void>\n|};\n\nexport function childComponent<P, X, C>(options : NormalizedComponentOptionsType<P, X, C>) : ChildComponent<P, X> {\n    const { tag, propsDef, autoResize, allowedParentDomains } = options;\n\n    const onPropHandlers = [];\n    const childPayload = getChildPayload();\n    let props : ChildPropsType<P, X>;\n    const exportsPromise = new ZalgoPromise();\n\n    if (!childPayload) {\n        throw new Error(`No child payload found`);\n    }\n\n    if (childPayload.version !== __ZOID__.__VERSION__) {\n        throw new Error(`Parent window has zoid version ${ childPayload.version }, child window has version ${ __ZOID__.__VERSION__ }`);\n    }\n\n    const { uid, parent: parentRef, parentDomain, exports: parentExports, context, props: propsRef } = childPayload;\n    const parentComponentWindow = getParentComponentWindow(parentRef);\n    const parent : ParentExportsType<P, X> = deserializeMessage(parentComponentWindow, parentDomain, parentExports);\n\n    const { show, hide, close } = parent;\n\n    const getParent = () => parentComponentWindow;\n    const getParentDomain = () => parentDomain;\n    \n    const onProps = (handler : Function) => {\n        onPropHandlers.push(handler);\n    };\n\n    const onError = (err : mixed) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            if (parent && parent.onError) {\n                return parent.onError(err);\n            } else {\n                throw err;\n            }\n        });\n    };\n\n    const resize = ({ width, height } : {| width : ?number, height : ?number |}) : ZalgoPromise<void> => {\n        return parent.resize.fireAndForget({ width, height });\n    };\n\n    const xport = (xports : X) : ZalgoPromise<void> => {\n        exportsPromise.resolve(xports);\n        return parent.export(xports);\n    };\n\n    const getSiblings = ({ anyParent } = {}) => {\n        const result = [];\n        const currentParent = props.parent;\n\n        if (typeof anyParent === 'undefined') {\n            anyParent = !currentParent;\n        }\n\n        if (!anyParent && !currentParent) {\n            throw new Error(`No parent found for ${ tag } child`);\n        }\n\n        for (const win of getAllFramesInWindow(window)) {\n            if (!isSameDomain(win)) {\n                continue;\n            }\n\n            const xprops : ChildPropsType<mixed, mixed> = assertSameDomain(win).xprops;\n\n            if (!xprops || getParent() !== xprops.getParent()) {\n                continue;\n            }\n\n            const winParent = xprops.parent;\n\n            if (!anyParent && currentParent) {\n                if (!winParent || winParent.uid !== currentParent.uid) {\n                    continue;\n                }\n            }\n\n            const xports = tryGlobal(win, global => global.exports);\n\n            result.push({\n                props:   xprops,\n                exports: xports\n            });\n        }\n\n        return result;\n    };\n\n    const getHelpers = () : ChildHelpers<P, X> => {\n        return {\n            tag, show, hide, close, focus, onError, resize, getSiblings,\n            onProps, getParent, getParentDomain, uid, export: xport\n        };\n    };\n\n    const watchForClose = () => {\n        window.addEventListener('beforeunload', () => {\n            parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(parentComponentWindow, () => {\n            destroy();\n        });\n    };\n\n    const setProps = (newProps : PropsType<P>, origin : string, isUpdate : boolean = false) => {\n        const helpers = getHelpers();\n        const normalizedProps = normalizeChildProps(parentComponentWindow, propsDef, newProps, origin, helpers, isUpdate);\n\n        if (props) {\n            extend(props, normalizedProps);\n        } else {\n            props = normalizedProps;\n        }\n\n        for (const handler of onPropHandlers) {\n            handler(props);\n        }\n    };\n    \n    const getAutoResize = () : ZalgoPromise<{| width : boolean, height : boolean, element : ?HTMLElement |}> => {\n        const { width = false, height = false, element: elementRef = 'body' } = autoResize;\n        return elementReady(elementRef).catch(noop).then(element => {\n            return { width, height, element };\n        });\n    };\n\n    const watchForResize = () : ?ZalgoPromise<void> => {\n        return getAutoResize().then(({ width, height, element }) => {\n            if (!element || (!width && !height) || context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    };\n\n    const updateProps = (newProps : (PropsType<P>)) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => setProps(newProps, parentDomain, true));\n    };\n\n    const init = () => {\n        return ZalgoPromise.try(() => {\n            getGlobal(window).exports = options.exports({\n                getExports: () => exportsPromise\n            });\n\n            checkParentDomain(allowedParentDomains, parentDomain);\n            markWindowKnown(parentComponentWindow);\n            watchForClose();\n\n            return parent.init({ updateProps, close: destroy });\n    \n        }).then(() => {\n            return watchForResize();\n    \n        }).catch(err => {\n            onError(err);\n        });\n    };\n\n    const getProps = () => {\n        if (props) {\n            return props;\n        }\n\n        setProps(getPropsByRef(parentComponentWindow, parentDomain, propsRef), parentDomain);\n        return props;\n    };\n\n    return {\n        init,\n        getProps\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop, type EventEmitterType } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType, isWindowClosed, isSameDomain } from 'cross-domain-utils/src';\nimport { ProxyWindow, toProxyWindow } from 'post-robot/src';\n\nimport type { CssDimensionsType } from '../types';\nimport { PROP_SERIALIZATION, PROP_TYPE } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\nexport type Sibling = {|\n    props : mixed,\n    exports : mixed\n|};\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type cspNoncePropType = string;\nexport type uidPropType = string;\nexport type tagPropType = string;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type showPropType = () => ZalgoPromise<void>;\nexport type exportPropType<X> = (X) => ZalgoPromise<void>;\nexport type getSiblingsPropType = (opts? : {| anyParent? : boolean |}) => $ReadOnlyArray<Sibling>;\nexport type hidePropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({| width : ?number, height : ?number |}) => ZalgoPromise<void>;\nexport type getParentPropType = () => CrossDomainWindowType;\nexport type getParentDomainPropType = () => string;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onDestroyPropType = EventHandlerType<void>;\nexport type onResizePropType = EventHandlerType<void>;\nexport type onFocusPropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onPropsPropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\nexport type ParentPropType<P, X> = {|\n    uid : string,\n    // eslint-disable-next-line no-use-before-define\n    props : PropsType<P>,\n    export : exportPropType<X>\n|};\n\nexport type PropsInputType<P> = {|\n    parent? : ParentPropType<mixed, mixed>,\n    \n    timeout? : timeoutPropType,\n    window? : windowPropType,\n    cspNonce? : ?cspNoncePropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onDestroy? : onDestroyPropType,\n    onResize? : onResizePropType,\n    onFocus? : onFocusPropType,\n    onError? : onErrorPropType,\n    onProps? : onPropsPropType<P>,\n\n    ...P\n|};\n\nexport type PropsType<P> = {|\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    cspNonce? : ?cspNoncePropType,\n    dimensions : CssDimensionsType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onDestroy : onDestroyPropType,\n    onResize : onResizePropType,\n    onFocus : onFocusPropType,\n    onError : onErrorPropType,\n    onProps : onPropsPropType<P>,\n    \n    ...P\n|};\n\ntype onErrorChildPropType = (mixed) => ZalgoPromise<void>;\n\nexport type ChildPropsType<P, X> = {|\n    ...PropsType<P>,\n\n    parent? : ParentPropType<mixed, mixed>,\n    uid : uidPropType,\n    tag : tagPropType,\n    close : closePropType,\n    focus : focusPropType,\n    show : showPropType,\n    hide : hidePropType,\n    export : exportPropType<X>,\n    getParent : getParentPropType,\n    getParentDomain : getParentDomainPropType,\n    resize : resizePropType,\n    onError : onErrorChildPropType,\n    onProps : onPropsPropType<P>,\n    getSiblings : getSiblingsPropType\n|};\n\nexport type PropDefinitionType<T, P, S : $Values<typeof PROP_TYPE>, X> = {|\n    type : S,\n    alias? : string,\n    value? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => ?T,\n    default? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => ?T,\n    decorate? : ({|\n        value : T,\n        props : PropsType<P>,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => T,\n    childDecorate? : ({|\n        value : ?T,\n        uid : uidPropType,\n        tag : tagPropType,\n        close : closePropType,\n        focus : focusPropType,\n        onError : onErrorPropType,\n        onProps : onPropsPropType<P>,\n        resize : resizePropType,\n        getParentDomain : getParentDomainPropType,\n        getParent : getParentPropType,\n        show : showPropType,\n        hide : hidePropType,\n        export : exportPropType<X>,\n        getSiblings : getSiblingsPropType\n    |}) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({| value : T |}) => (string | ZalgoPromise<string>),\n    bodyParam? : boolean | string | ({| value : T |}) => (string | ZalgoPromise<string>),\n    // eslint-disable-next-line no-undef\n    queryValue? : <R>({| value : T |}) => (ZalgoPromise<R> | R | string),\n    // eslint-disable-next-line no-undef\n    bodyValue? : <R>({| value : T |}) => (ZalgoPromise<R> | R | string),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({| value : T, props : PropsType<P> |}) => void,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>\n|};\n\nexport type BOOLEAN_DEFINITION_TYPE = typeof PROP_TYPE.BOOLEAN;\nexport type STRING_DEFINITION_TYPE = typeof PROP_TYPE.STRING;\nexport type NUMBER_DEFINITION_TYPE = typeof PROP_TYPE.NUMBER;\nexport type FUNCTION_DEFINITION_TYPE = typeof PROP_TYPE.FUNCTION;\nexport type ARRAY_DEFINITION_TYPE = typeof PROP_TYPE.ARRAY;\nexport type OBJECT_DEFINITION_TYPE = typeof PROP_TYPE.OBJECT;\n\nexport type DEFINITION_TYPE =\n        BOOLEAN_DEFINITION_TYPE | STRING_DEFINITION_TYPE | NUMBER_DEFINITION_TYPE |\n        FUNCTION_DEFINITION_TYPE | ARRAY_DEFINITION_TYPE | OBJECT_DEFINITION_TYPE;\n\n\nexport type BooleanPropDefinitionType<T : boolean, P, X> = PropDefinitionType<T, P, BOOLEAN_DEFINITION_TYPE, X>;\nexport type StringPropDefinitionType<T : string, P, X> = PropDefinitionType<T, P, STRING_DEFINITION_TYPE, X>;\nexport type NumberPropDefinitionType<T : number, P, X> = PropDefinitionType<T, P, NUMBER_DEFINITION_TYPE, X>;\nexport type FunctionPropDefinitionType<T : Function, P, X> = PropDefinitionType<T, P, FUNCTION_DEFINITION_TYPE, X>;\nexport type ArrayPropDefinitionType<T : Array<*> | $ReadOnlyArray<*>, P, X> = PropDefinitionType<T, P, ARRAY_DEFINITION_TYPE, X>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P, X> = PropDefinitionType<T, P, OBJECT_DEFINITION_TYPE, X>;\n\nexport type MixedPropDefinitionType<P, X> =\n    BooleanPropDefinitionType<*, P, X> |\n    StringPropDefinitionType<*, P, X> |\n    NumberPropDefinitionType<*, P, X> |\n    FunctionPropDefinitionType<*, P, X> |\n    ObjectPropDefinitionType<*, P, X> |\n    ArrayPropDefinitionType<*, P, X>;\n\nexport type UserPropsDefinitionType<P, X> = {|\n    [string] : MixedPropDefinitionType<P, X>\n|};\n\nexport type BuiltInPropsDefinitionType<P, X> = {|\n    timeout : NumberPropDefinitionType<timeoutPropType, P, X>,\n    window : ObjectPropDefinitionType<windowPropType, P, X>,\n    close : FunctionPropDefinitionType<closePropType, P, X>,\n    focus : FunctionPropDefinitionType<focusPropType, P, X>,\n    resize : FunctionPropDefinitionType<resizePropType, P, X>,\n    uid : StringPropDefinitionType<uidPropType, P, X>,\n    tag : StringPropDefinitionType<tagPropType, P, X>,\n    cspNonce : StringPropDefinitionType<cspNoncePropType, P, X>,\n    getParent : FunctionPropDefinitionType<getParentPropType, P, X>,\n    getParentDomain : FunctionPropDefinitionType<getParentDomainPropType, P, X>,\n    hide : FunctionPropDefinitionType<hidePropType, P, X>,\n    show : FunctionPropDefinitionType<showPropType, P, X>,\n    export : FunctionPropDefinitionType<exportPropType<X>, P, X>,\n    getSiblings : FunctionPropDefinitionType<getSiblingsPropType, P, X>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P, X>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P, X>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P, X>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P, X>,\n    onDestroy : FunctionPropDefinitionType<onDestroyPropType, P, X>,\n    onResize : FunctionPropDefinitionType<onClosePropType, P, X>,\n    onFocus : FunctionPropDefinitionType<onFocusPropType, P, X>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P, X>,\n    onProps : FunctionPropDefinitionType<onPropsPropType<P>, P, X>\n|};\n\nexport type PropsDefinitionType<P, X> = {|\n    ...BuiltInPropsDefinitionType<P, X>,\n    [ string ] : MixedPropDefinitionType<P, X>\n|};\n\nconst defaultNoop = () => noop;\n// eslint-disable-next-line flowtype/require-exact-type\nconst decorateOnce = <F : Function>({ value } : { value : F }) : F => once(value);\n\nexport function getBuiltInProps<P, X>() : BuiltInPropsDefinitionType<P, X> {\n    return {\n        window: {\n            type:          PROP_TYPE.OBJECT,\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate:      ({ value }) => {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n\n                if (isWindow(value)) {\n                    // $FlowFixMe\n                    if (isWindowClosed(value)) {\n                        throw new Error(`Window is closed`);\n                    }\n\n                    // $FlowFixMe\n                    if (!isSameDomain(value)) {\n                        throw new Error(`Window is not same domain`);\n                    }\n                }\n            },\n            decorate: ({ value }) => {\n                return toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        PROP_TYPE.NUMBER,\n            required:    false,\n            sendToChild: false\n        },\n\n        cspNonce: {\n            type:     PROP_TYPE.STRING,\n            required: false\n        },\n\n        onDisplay: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onRendered: {\n            type:        PROP_TYPE.FUNCTION,\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onRender: {\n            type:        PROP_TYPE.FUNCTION,\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onClose: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onDestroy: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onResize: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        onFocus: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        close: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => close\n        },\n\n        focus: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => focus\n        },\n\n        resize: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => resize\n        },\n\n        uid: {\n            type:          PROP_TYPE.STRING,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ uid }) => uid\n        },\n\n        tag: {\n            type:          PROP_TYPE.STRING,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ tag }) => tag\n        },\n\n        getParent: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParent }) => getParent\n        },\n\n        getParentDomain: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParentDomain }) => getParentDomain\n        },\n\n        show: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ show }) => show\n        },\n\n        hide: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ hide }) => hide\n        },\n\n        export: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ 'export': xport }) => xport\n        },\n\n        onError: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => onError\n        },\n\n        onProps: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onProps }) => onProps\n        },\n\n        getSiblings: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getSiblings }) => getSiblings\n        }\n    };\n}\n\ntype PropCallback<P, X, R> =\n    ((string, BooleanPropDefinitionType<boolean, P, X>, boolean) => R) &\n    ((string, StringPropDefinitionType<string, P, X>, string) => R) &\n    ((string, NumberPropDefinitionType<number, P, X>, number) => R) &\n    ((string, FunctionPropDefinitionType<Function, P, X>, Function) => R) &\n    ((string, ArrayPropDefinitionType<$ReadOnlyArray<*> | $ReadOnlyArray<*>, P, X>, $ReadOnlyArray<*> | $ReadOnlyArray<*>) => R) &\n    ((string, ObjectPropDefinitionType<Object, P, X>, Object) => R);\n\nexport function eachProp<P, X>(props : PropsType<P>, propsDef : PropsDefinitionType<P, X>, handler : PropCallback<P, X, void>) {\n    for (const key of Object.keys(props)) {\n        const propDef = propsDef[key];\n        const value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        // $FlowFixMe[incompatible-call]\n        handler(key, propDef, value);\n    }\n}\n\nexport function mapProps<P, X, T>(props : PropsType<P>, propsDef : PropsDefinitionType<P, X>, handler : PropCallback<P, X, T>) : $ReadOnlyArray<T> {\n    const results = [];\n\n    eachProp(props, propsDef, (key, propDef, value) => {\n        // $FlowFixMe[incompatible-call]\n        const result = handler(key, propDef, value);\n        results.push(result);\n    });\n    return results;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined, extend, base64encode } from 'belter/src';\n\nimport { eachProp, mapProps, type PropsInputType, type PropsType, type PropsDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION, METHOD } from '../constants';\n\nimport type { ParentHelpers } from './index';\n\nfunction getDefaultInputProps<P>() : P {\n    // $FlowFixMe[incompatible-type]\n    const defaultInputProps : P = {};\n    return defaultInputProps;\n}\n\nexport function extendProps<P, X>(propsDef : PropsDefinitionType<P, X>, props : PropsType<P>, inputProps : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) {\n\n    inputProps = inputProps || getDefaultInputProps();\n    extend(props, inputProps);\n\n    const propNames = isUpdate ? [] : [ ...Object.keys(propsDef) ];\n\n    for (const key of Object.keys(inputProps)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, event, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = propsDef[key];\n\n        // $FlowFixMe\n        let value = inputProps[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(inputProps[alias])) {\n                value = inputProps[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props, state, close, focus, event, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props, state, close, focus, event, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        props[key] = value;\n    }\n\n    for (const alias of aliases) {\n        delete props[alias];\n    }\n\n    eachProp(props, propsDef, (key, propDef, value) => {\n        if (!propDef) {\n            return;\n        }\n\n        if (__DEBUG__ && isDefined(value) && propDef.validate) {\n            // $FlowFixMe[incompatible-call]\n            // $FlowFixMe[incompatible-exact]\n            propDef.validate({ value, props });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            // $FlowFixMe[incompatible-call]\n            const decoratedValue = propDef.decorate({ value, props, state, close, focus, event, onError });\n            // $FlowFixMe[incompatible-type]\n            props[key] = decoratedValue;\n        }\n    });\n\n    for (const key of Object.keys(propsDef)) {\n        const propDef = propsDef[key];\n        // $FlowFixMe\n        const propVal = props[key];\n        if (propDef.required !== false && !isDefined(propVal)) {\n            throw new Error(`Expected prop \"${ key }\" to be defined`);\n        }\n    }\n}\n\nexport function serializeProps<P, X>(propsDef : PropsDefinitionType<P, X>, props : (PropsType<P>), method : $Values<typeof METHOD>) : ZalgoPromise<{ [string] : string | boolean }> {\n\n    const params = {};\n\n    return ZalgoPromise.all(mapProps(props, propsDef, (key, propDef, value) => {\n        return ZalgoPromise.resolve().then(() => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            const getParam = {\n                [ METHOD.GET ]:  propDef.queryParam,\n                [ METHOD.POST ]: propDef.bodyParam\n            }[method];\n\n            const getValue = {\n                [ METHOD.GET ]:  propDef.queryValue,\n                [ METHOD.POST ]: propDef.bodyValue\n            }[method];\n            \n            if (!getParam) {\n                return;\n            }\n\n            return ZalgoPromise.hash({\n\n                finalParam: ZalgoPromise.try(() => {\n                    if (typeof getParam === 'function') {\n                        // $FlowFixMe[incompatible-call]\n                        return getParam({ value });\n                    } else if (typeof getParam === 'string') {\n                        return getParam;\n                    } else {\n                        return key;\n                    }\n                }),\n    \n                finalValue: ZalgoPromise.try(() => {\n                    if (typeof getValue === 'function' && isDefined(value)) {\n                        // $FlowFixMe[incompatible-call]\n                        // $FlowFixMe[incompatible-return]\n                        return getValue({ value });\n                    } else {\n                        // $FlowFixMe[incompatible-return]\n                        return value;\n                    }\n                })\n\n            }).then(({ finalParam, finalValue }) => {\n\n                let result;\n\n                if (typeof finalValue === 'boolean') {\n                    result = finalValue.toString();\n                } else if (typeof finalValue === 'string') {\n                    result = finalValue.toString();\n                } else if (typeof finalValue === 'object' && finalValue !== null) {\n\n                    if (propDef.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(finalValue);\n                    } else if (propDef.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = base64encode(JSON.stringify(finalValue));\n                    } else if (propDef.serialization === PROP_SERIALIZATION.DOTIFY || !propDef.serialization) {\n                        result = dotify(finalValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof finalValue === 'number') {\n                    result = finalValue.toString();\n                }\n\n                params[finalParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow, toProxyWindow, type CrossDomainFunctionType, cleanUpWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    getDomain, type CrossDomainWindowType,\n    getDistanceFromTop, normalizeMockUrl, assertSameDomain, closeWindow, onCloseWindow, isWindowClosed, isSameTopWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow, eventEmitter, type EventEmitterType,\n    noop, onResize, extendUrl, appendChild, cleanup, base64encode, isRegex,\n    once, stringifyError, destroyElement, getElementSafe, showElement, hideElement, iframe, memoize, isElementClosed,\n    awaitFrameWindow, popup, normalizeDimension, watchElementForClose, isShadowElement, insertShadowSlot } from 'belter/src';\n\nimport { ZOID, POST_MESSAGE, CONTEXT, EVENT, METHOD,\n    INITIAL_PROPS, WINDOW_REFERENCES, DEFAULT_DIMENSIONS } from '../constants';\nimport { getGlobal, getProxyObject, type ProxyObject } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { CssDimensionsType } from '../types';\nimport type { NormalizedComponentOptionsType, AttributesType } from '../component';\n\nimport { serializeProps, extendProps } from './props';\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsType<P>,\n    tag : string,\n    context : $Values<typeof CONTEXT>,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : CssDimensionsType,\n    state : Object,\n    event : EventEmitterType,\n    frame : ?HTMLIFrameElement,\n    prerenderFrame : ?HTMLIFrameElement\n|};\n\nexport type ParentExportsType<P, X> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : CrossDomainFunctionType<[], boolean>,\n    resize : CrossDomainFunctionType<[{| width? : ?number, height? : ?number |}], void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>,\n    export : (X) => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, value : string |} |\n    {| type : typeof INITIAL_PROPS.UID, uid : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    version : string,\n    context : $Values<typeof CONTEXT>,\n    parentDomain : string,\n    childDomain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>,\n    event : EventEmitterType,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>\n|};\n\nfunction getDefaultProps<P>() : PropsType<P> {\n    // $FlowFixMe\n    return {};\n}\n\ntype InternalState = {|\n    visible : boolean\n|};\n\ntype Rerender = () => ZalgoPromise<void>;\n\ntype RenderContainerOptions = {|\n    context : $Values<typeof CONTEXT>,\n    proxyFrame : ?ProxyObject<HTMLIFrameElement>,\n    proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>,\n    rerender : Rerender\n|};\n\ntype ResolveInitPromise = () => ZalgoPromise<void>;\ntype RejectInitPromise = (mixed) => ZalgoPromise<void>;\ntype GetProxyContainer = (container : string | HTMLElement) => ZalgoPromise<ProxyObject<HTMLElement>>;\ntype Show = () => ZalgoPromise<void>;\ntype Hide = () => ZalgoPromise<void>;\ntype Close = () => ZalgoPromise<void>;\ntype OnError = (mixed) => ZalgoPromise<void>;\ntype RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, RenderContainerOptions) => ZalgoPromise<?ProxyObject<HTMLElement>>;\ntype SetProxyWin = (ProxyWindow) => ZalgoPromise<void>;\ntype GetProxyWindow = () => ZalgoPromise<ProxyWindow>;\ntype OpenFrame = (context : $Values<typeof CONTEXT>, {| windowName : string |}) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype OpenPrerenderFrame = (context : $Values<typeof CONTEXT>) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype Prerender = (proxyPrerenderWin : ProxyWindow, {| context : $Values<typeof CONTEXT>|}) => ZalgoPromise<void>;\ntype Open = (context : $Values<typeof CONTEXT>, {| proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string |}) => ZalgoPromise<ProxyWindow>;\ntype OpenPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>;\ntype WatchForUnload = () => ZalgoPromise<void>;\ntype GetInternalState = () => ZalgoPromise<InternalState>;\ntype SetInternalState = (InternalState) => ZalgoPromise<InternalState>;\n\ntype ParentDelegateOverrides<P> = {|\n    props : PropsType<P>,\n    event : EventEmitterType,\n    close : Close,\n    onError : OnError,\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload,\n    getInternalState : GetInternalState,\n    setInternalState : SetInternalState,\n    resolveInitPromise : ResolveInitPromise,\n    rejectInitPromise : RejectInitPromise\n|};\n\ntype DelegateOverrides = {|\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload\n|};\n\ntype RenderOptions = {|\n    target : CrossDomainWindowType,\n    container : string | HTMLElement,\n    context : $Values<typeof CONTEXT>,\n    rerender : Rerender\n|};\n\ntype ParentComponent<P, X> = {|\n    init : () => void,\n    render : (RenderOptions) => ZalgoPromise<void>,\n    getProps : () => PropsType<P>,\n    setProps : (newProps : PropsInputType<P>, isUpdate? : boolean) => void,\n    export : (X) => ZalgoPromise<void>,\n    destroy : (err? : mixed) => ZalgoPromise<void>,\n    getHelpers : () => ParentHelpers<P>,\n    getDelegateOverrides : () => ZalgoPromise<DelegateOverrides>,\n    getExports : () => X\n|};\n\nconst getDefaultOverrides = <P>() : ParentDelegateOverrides<P> => {\n    // $FlowFixMe\n    return {};\n};\n\ntype ParentOptions<P, X, C> = {|\n    uid : string,\n    options : NormalizedComponentOptionsType<P, X, C>,\n    overrides? : ParentDelegateOverrides<P>,\n    parentWin? : CrossDomainWindowType\n|};\n\nexport function parentComponent<P, X, C>({ uid, options, overrides = getDefaultOverrides(), parentWin = window } : ParentOptions<P, X, C>) : ParentComponent<P, X> {\n    const { propsDef, containerTemplate, prerenderTemplate, tag, name, attributes, dimensions, autoResize, url, domain: domainMatch, validate, exports: xports } = options;\n\n    const initPromise = new ZalgoPromise();\n    const handledErrors = [];\n    const clean = cleanup();\n    const state = {};\n    let internalState = {\n        visible: true\n    };\n    const event = overrides.event ? overrides.event : eventEmitter();\n    const props : PropsType<P> = overrides.props ? overrides.props : getDefaultProps();\n\n    let currentProxyWin : ?ProxyWindow;\n    let currentProxyContainer : ?ProxyObject<HTMLElement>;\n    let childComponent : ?ChildExportsType<P>;\n\n    const onErrorOverride : ?OnError = overrides.onError;\n    let getProxyContainerOverride : ?GetProxyContainer = overrides.getProxyContainer;\n    let showOverride : ?Show = overrides.show;\n    let hideOverride : ?Hide = overrides.hide;\n    const closeOverride : ?Close = overrides.close;\n    let renderContainerOverride : ?RenderContainer = overrides.renderContainer;\n    let getProxyWindowOverride : ?GetProxyWindow = overrides.getProxyWindow;\n    let setProxyWinOverride : ?SetProxyWin = overrides.setProxyWin;\n    let openFrameOverride : ?OpenFrame = overrides.openFrame;\n    let openPrerenderFrameOverride : ?OpenPrerenderFrame = overrides.openPrerenderFrame;\n    let prerenderOverride : ?Prerender = overrides.prerender;\n    let openOverride : ?Open = overrides.open;\n    let openPrerenderOverride : ?OpenPrerender = overrides.openPrerender;\n    let watchForUnloadOverride : ?WatchForUnload = overrides.watchForUnload;\n    const getInternalStateOverride : ?GetInternalState = overrides.getInternalState;\n    const setInternalStateOverride : ?SetInternalState = overrides.setInternalState;\n\n    const getDimensions = () : CssDimensionsType => {\n        if (typeof dimensions === 'function') {\n            return dimensions({ props });\n        }\n        return dimensions;\n    };\n\n    const resolveInitPromise = () => {\n        return ZalgoPromise.try(() => {\n            if (overrides.resolveInitPromise) {\n                return overrides.resolveInitPromise();\n            }\n\n            return initPromise.resolve();\n        });\n    };\n\n    const rejectInitPromise = (err : mixed) => {\n        return ZalgoPromise.try(() => {\n            if (overrides.rejectInitPromise) {\n                return overrides.rejectInitPromise(err);\n            }\n\n            return initPromise.reject(err);\n        });\n    };\n\n    const getPropsForChild = (domain : string | RegExp) : ZalgoPromise<PropsType<P>> => {\n        const result = {};\n\n        for (const key of Object.keys(props)) {\n            const prop = propsDef[key];\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n            \n            result[key] = props[key];\n        }\n\n        // $FlowFixMe\n        return ZalgoPromise.hash(result);\n    };\n\n    const setupEvents = () => {\n        event.on(EVENT.RENDER,   () => props.onRender());\n        event.on(EVENT.DISPLAY,  () => props.onDisplay());\n        event.on(EVENT.RENDERED, () => props.onRendered());\n        event.on(EVENT.CLOSE,    () => props.onClose());\n        event.on(EVENT.DESTROY,  () => props.onDestroy());\n        event.on(EVENT.RESIZE,   () => props.onResize());\n        event.on(EVENT.FOCUS,    () => props.onFocus());\n        event.on(EVENT.PROPS,    (newProps) => props.onProps(newProps));\n        event.on(EVENT.ERROR, err => {\n            if (props && props.onError) {\n                return props.onError(err);\n            } else {\n                return rejectInitPromise(err).then(() => {\n                    setTimeout(() => {\n                        throw err;\n                    }, 1);\n                });\n            }\n        });\n\n        clean.register(event.reset);\n    };\n\n    const getInternalState = () => {\n        return ZalgoPromise.try(() => {\n            if (getInternalStateOverride) {\n                return getInternalStateOverride();\n            }\n\n            return internalState;\n        });\n    };\n\n    const setInternalState = (newInternalState)  => {\n        return ZalgoPromise.try(() => {\n            if (setInternalStateOverride) {\n                return setInternalStateOverride(newInternalState);\n            }\n\n            internalState = { ...internalState, ...newInternalState };\n            return internalState;\n        });\n    };\n\n    const getProxyWindow = () : ZalgoPromise<ProxyWindow> => {\n        if (getProxyWindowOverride) {\n            return getProxyWindowOverride();\n        }\n\n        return ZalgoPromise.try(() => {\n            const windowProp = props.window;\n\n            if (windowProp) {\n                const proxyWin = toProxyWindow(windowProp);\n                clean.register(() => windowProp.close());\n                return proxyWin;\n            }\n\n            return new ProxyWindow({ send });\n        });\n    };\n\n    const getProxyContainer : GetProxyContainer = (container : string | HTMLElement) : ZalgoPromise<ProxyObject<HTMLElement>> => {\n        if (getProxyContainerOverride) {\n            return getProxyContainerOverride(container);\n        }\n\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            if (isShadowElement(containerElement)) {\n                containerElement = insertShadowSlot(containerElement);\n            }\n\n            return getProxyObject(containerElement);\n        });\n    };\n\n    const getPropsRef = (proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp) : ZalgoPromise<PropRef> => {\n        return getPropsForChild(domain).then(childProps => {\n            const value = serializeMessage(proxyWin, domain, childProps);\n\n            const propRef = (childDomain === getDomain())\n                ? { type: INITIAL_PROPS.UID, uid }\n                : { type: INITIAL_PROPS.RAW, value };\n\n            if (propRef.type === INITIAL_PROPS.UID) {\n                const global = getGlobal(window);\n                global.props = global.props || {};\n                global.props[uid] = value;\n\n                clean.register(() => {\n                    delete global.props[uid];\n                });\n            }\n\n            return propRef;\n        });\n    };\n\n    const setProxyWin = (proxyWin : ProxyWindow) : ZalgoPromise<void> => {\n        if (setProxyWinOverride) {\n            return setProxyWinOverride(proxyWin);\n        }\n\n        return ZalgoPromise.try(() => {\n            currentProxyWin = proxyWin;\n        });\n    };\n\n    const show = () : ZalgoPromise<void> => {\n        if (showOverride) {\n            return showOverride();\n        }\n\n        return ZalgoPromise.hash({\n            setState:    setInternalState({ visible: true }),\n            showElement: currentProxyContainer ? currentProxyContainer.get().then(showElement) : null\n        }).then(noop);\n    };\n\n    const hide = () : ZalgoPromise<void> => {\n        if (hideOverride) {\n            return hideOverride();\n        }\n\n        return ZalgoPromise.hash({\n            setState:    setInternalState({ visible: false }),\n            showElement: currentProxyContainer ? currentProxyContainer.get().then(hideElement) : null\n        }).then(noop);\n    };\n\n    const getUrl = () : string => {\n        if (typeof url === 'function') {\n            return url({ props });\n        }\n\n        return url;\n    };\n\n    const getAttributes = () : AttributesType => {\n        if (typeof attributes === 'function') {\n            return attributes({ props });\n        }\n\n        return attributes;\n    };\n\n    const buildQuery = () : ZalgoPromise<{| [string] : string | boolean |}> => {\n        return serializeProps(propsDef, props, METHOD.GET);\n    };\n\n    const buildBody = () : ZalgoPromise<{| [string] : string | boolean |}> => {\n        return serializeProps(propsDef, props, METHOD.POST);\n    };\n\n    const buildUrl = () : ZalgoPromise<string> => {\n        return buildQuery().then(query => {\n            return extendUrl(normalizeMockUrl(getUrl()), { query });\n        });\n    };\n\n    const getChildDomain = () : string => {\n        if (domainMatch && typeof domainMatch === 'string') {\n            return domainMatch;\n        }\n\n        return getDomainFromUrl(getUrl());\n    };\n\n    const getDomainMatcher = () : string | RegExp => {\n        if (domainMatch && isRegex(domainMatch)) {\n            return domainMatch;\n        }\n\n        return getChildDomain();\n    };\n\n    const openFrame = (context : $Values<typeof CONTEXT>, { windowName } : {| windowName : string |}) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openFrameOverride) {\n            return openFrameOverride(context, { windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n\n                // $FlowFixMe\n                const attrs = {\n                    name:  windowName,\n                    title: name,\n                    ...getAttributes().iframe\n                };\n\n                return getProxyObject(iframe({ attributes: attrs }));\n            }\n        });\n    };\n\n    const openPrerenderFrame = (context : $Values<typeof CONTEXT>) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openPrerenderFrameOverride) {\n            return openPrerenderFrameOverride(context);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                // $FlowFixMe\n                const attrs = {\n                    name:  `__${ ZOID }_prerender_frame__${ name }_${ uniqueID() }__`,\n                    title: `prerender__${ name }`,\n                    ...getAttributes().iframe\n                };\n                return getProxyObject(iframe({\n                    attributes: attrs\n                }));\n            }\n        });\n    };\n    \n    const openPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> => {\n        if (openPrerenderOverride) {\n            return openPrerenderOverride(context, proxyWin, proxyPrerenderFrame);\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyPrerenderFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n                \n                return proxyPrerenderFrame.get().then(prerenderFrame => {\n                    clean.register(() => destroyElement(prerenderFrame));\n        \n                    return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                        return assertSameDomain(prerenderFrameWindow);\n                    }).then(win => {\n                        return toProxyWindow(win);\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                return proxyWin;\n            } else {\n                throw new Error(`No render context available for ${ context }`);\n            }\n        });\n    };\n\n    const focus = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            if (currentProxyWin) {\n                return ZalgoPromise.all([\n                    event.trigger(EVENT.FOCUS),\n                    currentProxyWin.focus()\n                ]).then(noop);\n            }\n        });\n    };\n\n    const getWindowRef = (target : CrossDomainWindowType, domain : string, context : $Values<typeof CONTEXT>) : WindowRef => {\n        \n        if (domain === getDomain(window)) {\n            const global = getGlobal(window);\n            global.windows = global.windows || {};\n            global.windows[uid] = window;\n            clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    };\n\n    const runTimeout = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const timeout = props.timeout;\n\n            if (timeout) {\n                return initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    };\n\n    const initChild = (childExports : ChildExportsType<P>) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            childComponent = childExports;\n            resolveInitPromise();\n            clean.register(() => childExports.close.fireAndForget().catch(noop));\n        });\n    };\n\n    const resize = ({ width, height } : {| width? : ?number, height? : ?number |}) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            event.trigger(EVENT.RESIZE, { width, height });\n        });\n    };\n\n    const destroy = (err : mixed) : ZalgoPromise<void> => {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            return event.trigger(EVENT.DESTROY);\n        }).catch(noop).then(() => {\n            return clean.all(err);\n        }).then(() => {\n            initPromise.asyncReject(err || new Error('Component destroyed'));\n        });\n    };\n\n    const close = memoize((err? : mixed) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n\n            if (closeOverride) {\n                // $FlowFixMe\n                const source = closeOverride.__source__;\n\n                if (isWindowClosed(source)) {\n                    return;\n                }\n\n                return closeOverride();\n            }\n\n            return ZalgoPromise.try(() => {\n                return event.trigger(EVENT.CLOSE);\n            }).then(() => {\n                return destroy(err || new Error(`Component closed`));\n            });\n        });\n    });\n\n    const open = (context : $Values<typeof CONTEXT>, { proxyWin, proxyFrame, windowName } : {| proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string |}) : ZalgoPromise<ProxyWindow> => {\n        if (openOverride) {\n            return openOverride(context,  { proxyWin, proxyFrame, windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n        \n                return proxyFrame.get().then(frame => {\n                    return awaitFrameWindow(frame).then(win => {\n                        clean.register(() => destroyElement(frame));\n                        clean.register(() => cleanUpWindow(win));\n                        return win;\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                let { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = getDimensions();\n\n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                // $FlowFixMe\n                const attrs = {\n                    name: windowName,\n                    width,\n                    height,\n                    ...getAttributes().popup\n                };\n    \n                const win = popup('', attrs);\n    \n                clean.register(() => closeWindow(win));\n                clean.register(() => cleanUpWindow(win));\n\n                return win;\n            } else {\n                throw new Error(`No render context available for ${ context }`);\n            }\n\n        }).then(win => {\n            proxyWin.setWindow(win, { send });\n            return proxyWin.setName(windowName).then(() => {\n                return proxyWin;\n            });\n        });\n    };\n\n    const watchForUnload = () => {\n        return ZalgoPromise.try(() => {\n            const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n                destroy(new Error(`Window navigated away`));\n            }));\n    \n            const closeParentWindowListener = onCloseWindow(parentWin, destroy, 3000);\n            clean.register(closeParentWindowListener.cancel);\n            clean.register(unloadWindowListener.cancel);\n\n            if (watchForUnloadOverride) {\n                return watchForUnloadOverride();\n            }\n        });\n    };\n\n    const watchForClose = (proxyWin : ProxyWindow, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> => {\n        let cancelled = false;\n\n        clean.register(() => {\n            cancelled = true;\n        });\n\n        return ZalgoPromise.delay(2000).then(() => {\n            return proxyWin.isClosed();\n        }).then(isClosed => {\n            if (!cancelled) {\n                if (isClosed) {\n                    return close(new Error(`Detected ${ context } close`));\n                } else {\n                    return watchForClose(proxyWin, context);\n                }\n            }\n        });\n    };\n\n    const checkWindowClose = (proxyWin : ProxyWindow) : ZalgoPromise<boolean> => {\n        let closed = false;\n        \n        return proxyWin.isClosed().then(isClosed => {\n            if (isClosed) {\n                closed = true;\n                return close(new Error(`Detected component window close`));\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => proxyWin.isClosed())\n                .then(secondIsClosed => {\n                    if (secondIsClosed) {\n                        closed = true;\n                        return close(new Error(`Detected component window close`));\n                    }\n                });\n        }).then(() => {\n            return closed;\n        });\n    };\n\n    const onError = (err : mixed) : ZalgoPromise<void> => {\n        if (onErrorOverride) {\n            return onErrorOverride(err);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (handledErrors.indexOf(err) !== -1) {\n                return;\n            }\n\n            handledErrors.push(err);\n            initPromise.asyncReject(err);\n\n            return event.trigger(EVENT.ERROR, err);\n        });\n    };\n\n    const exportsPromise : ZalgoPromise<X> = new ZalgoPromise();\n\n    const getExports = () : X => {\n        return xports({\n            getExports: () => exportsPromise\n        });\n    };\n\n    const xport = (actualExports : X) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            exportsPromise.resolve(actualExports);\n        });\n    };\n\n    initChild.onError = onError;\n\n    const buildParentExports = (win : ProxyWindow) : ParentExportsType<P, X> => {\n        const checkClose = () => checkWindowClose(win);\n        return { init: initChild, close, checkClose, resize, onError, show, hide, export: xport };\n    };\n\n    const buildChildPayload = ({ proxyWin, childDomain, domain, target = window, context } : {| proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>|} = {}) : ZalgoPromise<ChildPayload> => {\n        return getPropsRef(proxyWin, childDomain, domain).then(propsRef => {\n            return {\n                uid,\n                context,\n                tag,\n                version:      __ZOID__.__VERSION__,\n                childDomain,\n                parentDomain: getDomain(window),\n                parent:       getWindowRef(target, childDomain, context),\n                props:        propsRef,\n                exports:      serializeMessage(proxyWin, domain, buildParentExports(proxyWin))\n            };\n        });\n    };\n\n    const buildWindowName = ({ proxyWin, childDomain, domain, target, context } : {| proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>|}) : ZalgoPromise<string> => {\n        return buildChildPayload({ proxyWin, childDomain, domain, target, context }).then(childPayload => {\n            return `__${ ZOID }__${ name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n        });\n    };\n\n    const renderTemplate = (renderer : (RenderOptionsType<P>) => ?HTMLElement, { context, container, doc, frame, prerenderFrame } : {| context : $Values<typeof CONTEXT>, container? : HTMLElement, doc : Document, frame? : ?HTMLIFrameElement, prerenderFrame? : ?HTMLIFrameElement |}) : ?HTMLElement => {\n        \n        return renderer({\n            uid, container, context, doc, frame, prerenderFrame,\n            focus, close, state, props, tag, dimensions: getDimensions(), event\n        });\n    };\n\n    const prerender = (proxyPrerenderWin : ProxyWindow, { context } : {| context : $Values<typeof CONTEXT>|}) : ZalgoPromise<void> => {\n        if (prerenderOverride) {\n            return prerenderOverride(proxyPrerenderWin, { context });\n        }\n                                                                                                                                                                                                                                    \n        return ZalgoPromise.try(() => {\n            if (!prerenderTemplate) {\n                return;\n            }\n\n            let prerenderWindow = proxyPrerenderWin.getWindow();\n\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n\n            prerenderWindow = assertSameDomain(prerenderWindow);\n    \n            const doc = prerenderWindow.document;\n            const el = renderTemplate(prerenderTemplate, { context, doc });\n\n            if (!el) {\n                return;\n            }\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = autoResize;\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                const prerenderResizeListener = onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n\n                event.on(EVENT.RENDERED, prerenderResizeListener.cancel);\n            }\n        });\n    };\n    const renderContainer : RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, { proxyFrame, proxyPrerenderFrame, context, rerender } : RenderContainerOptions) : ZalgoPromise<?ProxyObject<HTMLElement>> => {\n\n        if (renderContainerOverride) {\n            return renderContainerOverride(proxyContainer, { proxyFrame, proxyPrerenderFrame, context, rerender });\n        }\n\n        return ZalgoPromise.hash({\n            container:      proxyContainer.get(),\n            // $FlowFixMe\n            frame:          proxyFrame ? proxyFrame.get() : null,\n            // $FlowFixMe\n            prerenderFrame: proxyPrerenderFrame ? proxyPrerenderFrame.get() : null,\n            internalState:  getInternalState()\n        }).then(({ container, frame, prerenderFrame, internalState: { visible } }) => {\n            const innerContainer = renderTemplate(containerTemplate, { context, container, frame, prerenderFrame, doc: document });\n            if (innerContainer) {\n                if (!visible) {\n                    hideElement(innerContainer);\n                }\n                appendChild(container, innerContainer);\n                const containerWatcher = watchElementForClose(innerContainer, () => {\n                    const removeError = new Error(`Detected container element removed from DOM`);\n                    return ZalgoPromise.delay(1).then(() => {\n                        if (isElementClosed(innerContainer)) {\n                            close(removeError);\n                        } else {\n                            clean.all(removeError);\n                            return rerender().then(resolveInitPromise, rejectInitPromise);\n                        }\n                    });\n                });\n                \n                clean.register(() => containerWatcher.cancel());\n                clean.register(() => destroyElement(innerContainer));\n                currentProxyContainer = getProxyObject(innerContainer);\n                return currentProxyContainer;\n            }\n        });\n    };\n\n    const getBridgeUrl = () : ?string => {\n        if (typeof options.bridgeUrl === 'function') {\n            return options.bridgeUrl({ props });\n        }\n\n        return options.bridgeUrl;\n    };\n\n    const openBridge = (proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> => {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    };\n\n    const getHelpers = () : ParentHelpers<P> => {\n        return {\n            state, event, close, focus, resize,\n            // eslint-disable-next-line no-use-before-define\n            onError, updateProps, show, hide\n        };\n    };\n\n    const getProps = () => props;\n\n    const setProps = (newProps : PropsInputType<P>, isUpdate? : boolean = false) => {\n        if (__DEBUG__ && validate) {\n            validate({ props: newProps });\n        }\n\n        const helpers = getHelpers();\n        extendProps(propsDef, props, newProps, helpers, isUpdate);\n    };\n\n    const updateProps = (newProps : PropsInputType<P>) : ZalgoPromise<void> => {\n        setProps(newProps, true);\n\n        return initPromise.then(() => {\n            const child = childComponent;\n            const proxyWin = currentProxyWin;\n            \n            if (!child || !proxyWin) {\n                return;\n            }\n\n            return getPropsForChild(getDomainMatcher()).then(childProps => {\n                return child.updateProps(childProps).catch(err => {\n                    return checkWindowClose(proxyWin).then(closed => {\n                        if (!closed) {\n                            throw err;\n                        }\n                    });\n                });\n            });\n        });\n    };\n\n    const delegate = (context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) : ZalgoPromise<DelegateOverrides> => {\n        const delegateProps = {};\n        for (const propName of Object.keys(props)) {\n            const propDef = propsDef[propName];\n            if (propDef && propDef.allowDelegate) {\n                delegateProps[propName] = props[propName];\n            }\n        }\n\n        const childOverridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ name }`, {\n            uid,\n            overrides: {\n                props: delegateProps, event, close, onError, getInternalState,\n                setInternalState, resolveInitPromise, rejectInitPromise\n            }\n        }).then(({ data: { parent } }) => {\n            const parentComp : ParentComponent<P, X> = parent;\n\n            clean.register(err => {\n                if (!isWindowClosed(target)) {\n                    return parentComp.destroy(err);\n                }\n            });\n            return parentComp.getDelegateOverrides();\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        getProxyContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyContainer(...args));\n        renderContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.renderContainer(...args));\n        showOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.show(...args));\n        hideOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.hide(...args));\n        watchForUnloadOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.watchForUnload(...args));\n\n        if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n            getProxyWindowOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyWindow(...args));\n            openFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openFrame(...args));\n            openPrerenderFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerenderFrame(...args));\n            prerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.prerender(...args));\n            openOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.open(...args));\n            openPrerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerender(...args));\n        } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n            setProxyWinOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.setProxyWin(...args));\n        }\n\n        return childOverridesPromise;\n    };\n\n    const getDelegateOverrides = () : ZalgoPromise<DelegateOverrides> => {\n        return ZalgoPromise.try(() => {\n            return {\n                getProxyContainer, show, hide, renderContainer, getProxyWindow, watchForUnload,\n                openFrame, openPrerenderFrame, prerender, open, openPrerender, setProxyWin\n            };\n        });\n    };\n\n    const checkAllowRender = (target : CrossDomainWindowType, domain : string | RegExp, container : string | HTMLElement) => {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    };\n\n    const init = () => {\n        setupEvents();\n    };\n\n    const render = ({ target, container, context, rerender } : RenderOptions) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const domain = getDomainMatcher();\n            const childDomain = getChildDomain();\n            \n            checkAllowRender(target, domain, container);\n\n            const delegatePromise = ZalgoPromise.try(() => {\n                if (target !== window) {\n                    return delegate(context, target);\n                }\n            });\n\n            const windowProp = props.window;\n\n            const watchForUnloadPromise = watchForUnload();\n            \n            const buildUrlPromise = buildUrl();\n            const buildBodyPromise = buildBody();\n            const onRenderPromise = event.trigger(EVENT.RENDER);\n\n            const getProxyContainerPromise = getProxyContainer(container);\n            const getProxyWindowPromise = getProxyWindow();\n\n            const buildWindowNamePromise = getProxyWindowPromise.then(proxyWin => {\n                return buildWindowName({ proxyWin, childDomain, domain, target, context });\n            });\n\n            const openFramePromise = buildWindowNamePromise.then(windowName => openFrame(context, { windowName }));\n            const openPrerenderFramePromise = openPrerenderFrame(context);\n\n            const renderContainerPromise = ZalgoPromise.hash({ proxyContainer: getProxyContainerPromise, proxyFrame: openFramePromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyContainer, proxyFrame, proxyPrerenderFrame }) => {\n                return renderContainer(proxyContainer, { context, proxyFrame, proxyPrerenderFrame, rerender });\n            }).then(proxyContainer => {\n                return proxyContainer;\n            });\n\n            const openPromise = ZalgoPromise.hash({ windowName: buildWindowNamePromise, proxyFrame: openFramePromise, proxyWin: getProxyWindowPromise }).then(({ windowName, proxyWin, proxyFrame }) => {\n                return windowProp\n                    ? proxyWin\n                    : open(context, { windowName, proxyWin, proxyFrame });\n            });\n\n            const openPrerenderPromise = ZalgoPromise.hash({ proxyWin: openPromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyWin, proxyPrerenderFrame }) => {\n                return openPrerender(context, proxyWin, proxyPrerenderFrame);\n            });\n\n            const setStatePromise = openPromise.then(proxyWin => {\n                currentProxyWin = proxyWin;\n                return setProxyWin(proxyWin);\n            });\n            \n            const prerenderPromise = ZalgoPromise.hash({ proxyPrerenderWin: openPrerenderPromise, state: setStatePromise }).then(({ proxyPrerenderWin }) => {\n                return prerender(proxyPrerenderWin, { context });\n            });\n\n            const setWindowNamePromise =  ZalgoPromise.hash({ proxyWin: openPromise, windowName: buildWindowNamePromise }).then(({ proxyWin, windowName }) => {\n                if (windowProp) {\n                    return proxyWin.setName(windowName);\n                }\n            });\n\n            const getMethodPromise = ZalgoPromise.hash({ body: buildBodyPromise }).then(({ body }) => {\n                if (options.method) {\n                    return options.method;\n                }\n\n                if (Object.keys(body).length) {\n                    return METHOD.POST;\n                }\n\n                return METHOD.GET;\n            });\n\n\n            const loadUrlPromise = ZalgoPromise.hash({ proxyWin: openPromise, windowUrl: buildUrlPromise, body: buildBodyPromise, method: getMethodPromise, windowName: setWindowNamePromise, prerender: prerenderPromise }).then(({ proxyWin, windowUrl, body, method }) => {\n                return proxyWin.setLocation(windowUrl, { method, body });\n            });\n\n            const watchForClosePromise = openPromise.then(proxyWin => {\n                watchForClose(proxyWin, context);\n            });\n\n            const onDisplayPromise = ZalgoPromise.hash({ container: renderContainerPromise, prerender: prerenderPromise }).then(() => {\n                return event.trigger(EVENT.DISPLAY);\n            });\n\n            const openBridgePromise = openPromise.then(proxyWin => {\n                return openBridge(proxyWin, childDomain, context);\n            });\n\n            const runTimeoutPromise = loadUrlPromise.then(() => {\n                return runTimeout();\n            });\n\n            const onRenderedPromise = initPromise.then(() => {\n                return event.trigger(EVENT.RENDERED);\n            });\n\n            return ZalgoPromise.hash({\n                initPromise, buildUrlPromise, onRenderPromise, getProxyContainerPromise, openFramePromise, openPrerenderFramePromise, renderContainerPromise, openPromise,\n                openPrerenderPromise, setStatePromise, prerenderPromise, loadUrlPromise, buildWindowNamePromise, setWindowNamePromise, watchForClosePromise, onDisplayPromise,\n                openBridgePromise, runTimeoutPromise, onRenderedPromise, delegatePromise, watchForUnloadPromise\n            });\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                onError(err),\n                destroy(err)\n            ]).then(() => {\n                throw err;\n            }, () => {\n                throw err;\n            });\n        }).then(noop);\n    };\n\n    return {\n        init,\n        render,\n        destroy,\n        getProps,\n        setProps,\n        export: xport,\n        getHelpers,\n        getDelegateOverrides,\n        getExports\n    };\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { destroyElement, toCSS } from 'belter/src';\n\nimport { type RenderOptionsType } from '../../parent/parent';\nimport { EVENT } from '../../constants';\n\nconst CLASS = {\n    VISIBLE:   'zoid-visible',\n    INVISIBLE: 'zoid-invisible'\n};\n\n\nexport function defaultContainerTemplate<P>({ uid, frame, prerenderFrame, doc, props, event, dimensions } : RenderOptionsType<P>) : ?HTMLElement {\n    const  { width, height } = dimensions;\n\n    if (__ZOID__.__DEFAULT_CONTAINER__) {\n        if (!frame || !prerenderFrame) {\n            return;\n        }\n\n        const div = doc.createElement('div');\n        div.setAttribute('id', uid);\n        const style = doc.createElement('style');\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        style.appendChild(doc.createTextNode(`\n            #${ uid } {\n                display: inline-block;\n                position: relative;\n                width: ${ width };\n                height: ${ height };\n            }\n\n            #${ uid } > iframe {\n                display: inline-block;\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                top: 0;\n                left: 0;\n                transition: opacity .2s ease-in-out;\n            }\n\n            #${ uid } > iframe.${ CLASS.INVISIBLE } {\n                opacity: 0;\n            }\n\n            #${ uid } > iframe.${ CLASS.VISIBLE } {\n                opacity: 1;\n        }\n        `));\n\n        div.appendChild(frame);\n        div.appendChild(prerenderFrame);\n        div.appendChild(style);\n\n        prerenderFrame.classList.add(CLASS.VISIBLE);\n        frame.classList.add(CLASS.INVISIBLE);\n    \n        event.on(EVENT.RENDERED, () => {\n            prerenderFrame.classList.remove(CLASS.VISIBLE);\n            prerenderFrame.classList.add(CLASS.INVISIBLE);\n    \n            frame.classList.remove(CLASS.INVISIBLE);\n            frame.classList.add(CLASS.VISIBLE);\n    \n            setTimeout(() => {\n                destroyElement(prerenderFrame);\n            }, 1);\n        });\n\n        event.on(EVENT.RESIZE, ({ width: newWidth, height: newHeight }) => {\n            if (typeof newWidth === 'number') {\n                div.style.width = toCSS(newWidth);\n            }\n    \n            if (typeof newHeight === 'number') {\n                div.style.height = toCSS(newHeight);\n            }\n        });\n\n        return div;\n    }\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { type RenderOptionsType } from '../../parent/parent';\n\nexport function defaultPrerenderTemplate<P>({ doc, props } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_PRERENDER__) {\n        const html = doc.createElement('html');\n        const body = doc.createElement('body');\n        const style = doc.createElement('style');\n        const spinner = doc.createElement('div');\n        spinner.classList.add('spinner');\n\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        html.appendChild(body);\n        body.appendChild(spinner);\n        body.appendChild(style);\n        style.appendChild(doc.createTextNode(`\n            html, body {\n                width: 100%;\n                height: 100%;\n            }\n\n            .spinner {\n                position: fixed;\n                max-height: 60vmin;\n                max-width: 60vmin;\n                height: 40px;\n                width: 40px;\n                top: 50%;\n                left: 50%;\n                box-sizing: border-box;\n                border: 3px solid rgba(0, 0, 0, .2);\n                border-top-color: rgba(33, 128, 192, 0.8);\n                border-radius: 100%;\n                animation: rotation .7s infinite linear;\n            }\n\n            @keyframes rotation {\n                from {\n                    transform: translateX(-50%) translateY(-50%) rotate(0deg);\n                }\n                to {\n                    transform: translateX(-50%) translateY(-50%) rotate(359deg);\n                }\n            }\n        `));\n\n        return html;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { setup as setupPostRobot, on, send, bridge, toProxyWindow, destroy as destroyPostRobot } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, isElement, cleanup, memoize, identity, extend, uniqueID } from 'belter/src';\n\nimport { getChildPayload, childComponent, type ChildComponent } from '../child';\nimport { type RenderOptionsType, type ParentHelpers, parentComponent } from '../parent/parent';\nimport { ZOID, CONTEXT, POST_MESSAGE, WILDCARD, METHOD, PROP_TYPE } from '../constants';\nimport { react, angular, vue, vue3, angular2 } from '../drivers';\nimport { getGlobal, destroyGlobal } from '../lib';\nimport type { CssDimensionsType, StringMatcherType } from '../types';\n\nimport { validateOptions } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getBuiltInProps, type UserPropsDefinitionType, type PropsDefinitionType, type PropsInputType,\n    type PropsType, type ParentPropType, type exportPropType, type DEFINITION_TYPE } from './props';\n\ntype LoggerPayload = { [string] : ?string | ?boolean };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    info : (event : string, payload? : LoggerPayload) => any // eslint-disable-line flowtype/no-weak-types\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\ntype Attributes = {|\n    iframe? : { [string] : string },\n    popup? : { [string] : string }\n|};\n\nexport type ExportsConfigDefinition = {|\n    [string] : {|\n        type : DEFINITION_TYPE\n    |}\n|};\n\nexport type ExportsMapperDefinition<X> = ({|\n    getExports : () => ZalgoPromise<X>\n|}) => X;\n\nexport type ExportsDefinition<X> = ExportsConfigDefinition | ExportsMapperDefinition<X>;\n\nexport type ComponentOptionsType<P, X, C> = {|\n\n    tag : string,\n\n    url : string | ({| props : PropsType<P> |}) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n    method? : $Values<typeof METHOD>,\n\n    props? : UserPropsDefinitionType<P, X>,\n\n    dimensions? : CssDimensionsType | ({| props : PropsType<P> |}) => CssDimensionsType,\n    autoResize? : {| width? : boolean, height? : boolean, element? : string |},\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : Attributes | ({| props : PropsType<P> |}) => Attributes,\n\n    eligible? : ({| props : PropsInputType<P> |}) => {| eligible : boolean, reason? : string |},\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n\n    validate? : ({| props : PropsInputType<P> |}) => void,\n\n    logger? : Logger,\n\n    children? : () => C,\n\n    exports? : ExportsDefinition<X>\n|};\n\nexport type AttributesType = {|\n    iframe? : { [string] : string },\n    popup? : { [string] : string }\n|};\n\ntype AutoResizeType = {|\n    width? : boolean,\n    height? : boolean,\n    element? : string\n|};\n\nexport type NormalizedComponentOptionsType<P, X, C> = {|\n    tag : string,\n    name : string,\n\n    url : string | ({| props : PropsType<P> |}) => string,\n    domain : ?(string | RegExp),\n    bridgeUrl : ?string,\n    method : ?$Values<typeof METHOD>,\n\n    propsDef : PropsDefinitionType<P, X>,\n    dimensions : CssDimensionsType | ({| props : PropsType<P> |}) => CssDimensionsType,\n    autoResize : AutoResizeType,\n\n    allowedParentDomains : StringMatcherType,\n\n    attributes : AttributesType | ({| props : PropsType<P> |}) => AttributesType,\n\n    eligible : ({| props : PropsInputType<P> |}) => {| eligible : boolean, reason? : string |},\n\n    defaultContext : $Values<typeof CONTEXT>,\n\n    containerTemplate : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate : ?(RenderOptionsType<P>) => ?HTMLElement,\n\n    validate : ?({| props : PropsInputType<P> |}) => void,\n    logger : Logger,\n\n    children : () => C,\n\n    exports : ExportsMapperDefinition<X>\n|};\n\nexport type ZoidComponentInstance<P, X = void, C = void> = {|\n    ...ParentHelpers<P>,\n    ...X,\n    ...C,\n    isEligible : () => boolean,\n    clone : () => ZoidComponentInstance<P, X, C>,\n    render : (container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type ZoidComponent<P, X = void, C = void> = {\n    (props? : PropsInputType<P> | void) : ZoidComponentInstance<P, X, C>,\n    // eslint-disable-next-line no-undef\n    driver : <T>(string, mixed) => T,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>,\n    instances : $ReadOnlyArray<ZoidComponentInstance<P, X, C>>\n};\n\nconst getDefaultAttributes = () : AttributesType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultAutoResize = () : AutoResizeType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultExports = <X>() : () => X => {\n    // $FlowFixMe\n    return noop;\n};\n\nconst getDefaultDimensions = () : CssDimensionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nfunction normalizeOptions<P, X, C>(options : ComponentOptionsType<P, X, C>) : NormalizedComponentOptionsType<P, X, C> {\n    const {\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        props = {},\n        dimensions = getDefaultDimensions(),\n        autoResize = getDefaultAutoResize(),\n        allowedParentDomains = WILDCARD,\n        attributes = getDefaultAttributes(),\n        defaultContext = CONTEXT.IFRAME,\n        containerTemplate = (__ZOID__.__DEFAULT_CONTAINER__ ? defaultContainerTemplate : null),\n        prerenderTemplate = (__ZOID__.__DEFAULT_PRERENDER__ ? defaultPrerenderTemplate : null),\n        validate,\n        eligible = () => ({ eligible: true }),\n        logger = { info: noop },\n        exports: xportsDefinition = getDefaultExports(),\n        method,\n        children = () : C => {\n            // $FlowFixMe\n            return {};\n        }\n    } = options;\n\n    const name = tag.replace(/-/g, '_');\n\n    // $FlowFixMe[incompatible-type]\n    // $FlowFixMe[cannot-spread-inexact]\n    const propsDef : PropsDefinitionType<P, X> = {\n        ...getBuiltInProps(),\n        ...props\n    };\n\n    if (!containerTemplate) {\n        throw new Error(`Container template required`);\n    }\n\n    const xports = typeof xportsDefinition === 'function'\n        ? xportsDefinition\n        : ({ getExports }) : X => {\n            const result = {};\n\n            for (const key of Object.keys(xportsDefinition)) {\n                const { type } = xportsDefinition[key];\n                const valuePromise = getExports().then(res => {\n                    // $FlowFixMe\n                    return res[key];\n                });\n\n                if (type === PROP_TYPE.FUNCTION) {\n                    result[key] = (...args) => valuePromise.then(value => value(...args));\n                } else {\n                    result[key] = valuePromise;\n                }\n            }\n\n            // $FlowFixMe\n            return result;\n        };\n\n    return {\n        name,\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        method,\n        propsDef,\n        dimensions,\n        autoResize,\n        allowedParentDomains,\n        attributes,\n        defaultContext,\n        containerTemplate,\n        prerenderTemplate,\n        validate,\n        logger,\n        eligible,\n        children,\n        exports:     xports\n    };\n}\n\nlet cleanInstances = cleanup();\nconst cleanZoid = cleanup();\n\nexport type Component<P, X, C> = {|\n    init : (props? : PropsInputType<P> | void) => ZoidComponentInstance<P, X, C>,\n    instances : $ReadOnlyArray<ZoidComponentInstance<P, X, C>>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>,\n    registerChild : () => ?ChildComponent<P, X>\n|};\n\nexport function component<P, X, C>(opts : ComponentOptionsType<P, X, C>) : Component<P, X, C> {\n    if (__DEBUG__) {\n        validateOptions(opts);\n    }\n\n    const options = normalizeOptions(opts);\n\n    const {\n        name,\n        tag,\n        defaultContext,\n        propsDef,\n        eligible,\n        children\n    } = options;\n\n    const global = getGlobal(window);\n    const driverCache = {};\n    const instances = [];\n\n    const isChild = () : boolean => {\n        const payload = getChildPayload();\n        return Boolean(payload && payload.tag === tag && payload.childDomain === getDomain());\n    };\n\n    const registerChild = memoize(() : ?ChildComponent<P, X> => {\n        if (isChild()) {\n            if (window.xprops) {\n                delete global.components[tag];\n                throw new Error(`Can not register ${ name } as child - child already registered`);\n            }\n\n            const child = childComponent(options);\n            child.init();\n            return child;\n        }\n    });\n\n    const listenForDelegate = () => {\n        const allowDelegateListener = on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`, () => {\n            return true;\n        });\n\n        const delegateListener = on(`${ POST_MESSAGE.DELEGATE }_${ name }`, ({ source, data: { uid, overrides } }) => {\n            return {\n                parent: parentComponent({\n                    uid, options, overrides, parentWin: source\n                })\n            };\n        });\n\n        cleanZoid.register(allowDelegateListener.cancel);\n        cleanZoid.register(delegateListener.cancel);\n    };\n\n    const canRenderTo = (win : CrossDomainWindowType) : ZalgoPromise<boolean> => {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    };\n\n    const getDefaultContainer = (context : $Values<typeof CONTEXT>, container? : string | HTMLElement) : string | HTMLElement => {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    };\n\n    const getDefaultContext = (props : PropsInputType<P>, context : ?$Values<typeof CONTEXT>) : ZalgoPromise<$Values<typeof CONTEXT>> => {\n        return ZalgoPromise.try(() => {\n            if (props.window) {\n                return toProxyWindow(props.window).getType();\n            }\n\n            if (context) {\n                if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                    throw new Error(`Unrecognized context: ${ context }`);\n                }\n\n                return context;\n            }\n\n            return defaultContext;\n        });\n    };\n\n    const getDefaultInputProps = () : PropsInputType<P> => {\n        // $FlowFixMe\n        return {};\n    };\n\n    const init = (inputProps? : PropsInputType<P> | void) : ZoidComponentInstance<P, X, C> => {\n        // eslint-disable-next-line prefer-const\n        let instance;\n\n        const uid = `${ ZOID }-${ tag }-${ uniqueID() }`;\n        const props = inputProps || getDefaultInputProps();\n\n        const { eligible: eligibility, reason } = eligible({ props });\n        const isEligible = () => eligibility;\n\n        const onDestroy = props.onDestroy;\n        props.onDestroy = (...args) => {\n            if (instance && eligibility) {\n                instances.splice(instances.indexOf(instance), 1);\n            }\n\n            if (onDestroy) {\n                return onDestroy(...args);\n            }\n        };\n\n        const parent = parentComponent({\n            uid, options\n        });\n\n        parent.init();\n\n        if (eligibility) {\n            parent.setProps(props);\n        } else {\n            if (props.onDestroy) {\n                props.onDestroy();\n            }\n        }\n\n        cleanInstances.register(err => {\n            return parent.destroy(err || new Error(`zoid destroyed all components`));\n        });\n\n        const clone = ({ decorate = identity } = {}) => {\n            return init(decorate(props));\n        };\n\n        const getChildren = () : C => {\n            // $FlowFixMe\n            const childComponents : {| [string] : ZoidComponent<mixed> |} = children();\n            const result = {};\n\n            for (const childName of Object.keys(childComponents)) {\n                const Child : ZoidComponent<mixed> = childComponents[childName];\n\n                result[childName] = (childInputProps) => {\n                    const parentProps : PropsType<P> = parent.getProps();\n                    const parentExport : exportPropType<X> = parent.export;\n\n                    const childParent : ParentPropType<P, X> = {\n                        uid,\n                        props:  parentProps,\n                        export: parentExport\n                    };\n                    \n                    const childProps : PropsInputType<mixed> = {\n                        ...childInputProps,\n                        parent: childParent\n                    };\n\n                    return Child(childProps);\n                };\n            }\n\n            // $FlowFixMe\n            return result;\n        };\n\n        const render = (target, container, context) => {\n            return ZalgoPromise.try(() => {\n                if (!eligibility) {\n                    const err = new Error(reason || `${ name } component is not eligible`);\n\n                    return parent.destroy(err).then(() => {\n                        throw err;\n                    });\n                }\n\n                if (!isWindow(target)) {\n                    throw new Error(`Must pass window to renderTo`);\n                }\n\n                return getDefaultContext(props, context);\n\n            }).then(finalContext => {\n                container = getDefaultContainer(finalContext, container);\n\n                if (target !== window && typeof container !== 'string') {\n                    throw new Error(`Must pass string element when rendering to another window`);\n                }\n\n                return parent.render({\n                    target,\n                    container,\n                    context:    finalContext,\n                    rerender: () => {\n                        const newInstance = clone();\n                        extend(instance, newInstance);\n                        return newInstance.renderTo(target, container, context);\n                    }\n                });\n\n            }).catch(err => {\n                return parent.destroy(err).then(() => {\n                    throw err;\n                });\n            });\n        };\n\n        instance = {\n            ...parent.getExports(),\n            ...parent.getHelpers(),\n            ...getChildren(),\n            isEligible,\n            clone,\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n\n        if (eligibility) {\n            instances.push(instance);\n        }\n\n        return instance;\n    };\n\n    const driver = (driverName : string, dep : mixed) : mixed => {\n        if (__ZOID__.__FRAMEWORK_SUPPORT__) {\n            const drivers = { react, angular, vue, vue3, angular2 };\n\n            if (!drivers[driverName]) {\n                throw new Error(`Could not find driver for framework: ${ driverName }`);\n            }\n\n            if (!driverCache[driverName]) {\n                driverCache[driverName] = drivers[driverName].register(tag, propsDef, init, dep);\n            }\n\n            return driverCache[driverName];\n        } else {\n            throw new Error(`Driver support not enabled`);\n        }\n    };\n\n    registerChild();\n    listenForDelegate();\n\n    global.components = global.components || {};\n    if (global.components[tag]) {\n        throw new Error(`Can not register multiple components with the same tag: ${ tag }`);\n    }\n    global.components[tag] = true;\n\n    return {\n        init,\n        instances,\n        driver,\n        isChild,\n        canRenderTo,\n        registerChild\n    };\n}\n\nexport type ComponentDriverType<P, L, D, X, C> = {|\n    register : (string, PropsDefinitionType<P, X>, (PropsInputType<P>) => ZoidComponentInstance<P, X, C>, L) => D\n|};\n\nexport type ZoidProps<P> = PropsType<P>;\n\n// eslint-disable-next-line no-undef\nexport type CreateZoidComponent = <P, X, C>(options : ComponentOptionsType<P, X, C>) => ZoidComponent<P, X, C>;\n\nexport const create : CreateZoidComponent = <P, X, C>(options : ComponentOptionsType<P, X, C>) : ZoidComponent<P, X, C> => {\n    setupPostRobot();\n\n    const comp = component(options);\n\n    const init = (props? : PropsInputType<P> | void) => comp.init(props);\n    init.driver = (name, dep) => comp.driver(name, dep);\n    init.isChild = () => comp.isChild();\n    init.canRenderTo = (win) => comp.canRenderTo(win);\n    init.instances = comp.instances;\n\n    const child = comp.registerChild();\n    if (child) {\n        window.xprops = init.xprops = child.getProps();\n    }\n\n    return init;\n};\n\nexport function destroyComponents(err? : mixed) : ZalgoPromise<void> {\n    if (bridge) {\n        bridge.destroyBridges();\n    }\n\n    const destroyPromise = cleanInstances.all(err);\n    cleanInstances = cleanup();\n    return destroyPromise;\n}\n\nexport const destroyAll = destroyComponents;\n\nexport function destroy(err? : mixed) : ZalgoPromise<void> {\n    destroyAll();\n    destroyGlobal();\n    destroyPostRobot();\n    return cleanZoid.all(err);\n}\n"],"sourceRoot":""}